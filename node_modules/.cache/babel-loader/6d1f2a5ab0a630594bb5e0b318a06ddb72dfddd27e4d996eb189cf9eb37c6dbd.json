{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { v1 } from 'uuid';\nimport { Todolist } from \"./Todolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'All'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'Completed'\n  }]);\n  let [tasks, setTasks] = useState({\n    [todolistID1]: [{\n      id: v1(),\n      title: 'HTML&CSS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'JS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'ReactJS',\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todolistID2]: [{\n      id: v1(),\n      title: 'Rest API',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'GraphQL',\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }]\n  });\n  const removeTask = taskId => {\n    // setTasks(tasks.filter((el)=>el.id!==taskId))\n  };\n  const AddMessage = value => {\n    let NewTask = {\n      id: v1(),\n      title: value,\n      isDone: true\n    };\n\n    // setTasks([NewTask,...tasks])\n  };\n\n  const filteredTask = nameButton => {\n    setTodolists(todolists.map(el => el.id));\n  };\n  const changeStatus = (id, e) => {\n    // setTasks(tasks.map((el)=>el.id===id ? {...el,isDone: e}: el))\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolists.map(el => {\n      let filtered = tasks[el.id];\n      if (el.filter === 'Active') {\n        filtered = tasks[el.id].filter(el => el.isDone === false);\n      }\n      if (el.filter === 'Completed') {\n        filtered = tasks[el.id].filter(el => el.isDone === true);\n      }\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        title: el.title,\n        task: filtered,\n        removeTask: removeTask,\n        filteredTask: filteredTask,\n        AddMessage: AddMessage,\n        changeStatus: changeStatus,\n        Filter: el.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Hh5+XECSLSpBYL13EMjq9pfx3fE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","v1","Todolist","App","todolistID1","todolistID2","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","removeTask","taskId","AddMessage","value","NewTask","filteredTask","nameButton","map","el","changeStatus","e","filtered"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {v1} from 'uuid'\nimport {Todolist} from \"./Todolist\";\n\n\nexport type FilterValueType = 'All'|'Active'|'Completed'\n\ntype TodolistsType = {\n    id:string;\n    title:string;\n    filter:FilterValueType\n}\n\nfunction App() {\n\n\n    let todolistID1 = v1()\n    let todolistID2 = v1()\n\n    let [todolists, setTodolists] = useState<TodolistsType[]>([\n        {id: todolistID1, title: 'What to learn', filter: 'All'},\n        {id: todolistID2, title: 'What to buy', filter: 'Completed'},\n    ])\n\n    let [tasks, setTasks] = useState({\n        [todolistID1]: [\n            {id: v1(), title: 'HTML&CSS', isDone: true},\n            {id: v1(), title: 'JS', isDone: true},\n            {id: v1(), title: 'ReactJS', isDone: false},\n            {id: v1(), title: \"Rest API\", isDone: false},\n            {id: v1(), title: \"GraphQL\", isDone: false},\n\n        ],\n        [todolistID2]: [\n            {id: v1(), title: 'Rest API', isDone: true},\n            {id: v1(), title: 'GraphQL', isDone: false},\n            {id: v1(), title: \"ReactJS\", isDone: false},\n            {id: v1(), title: \"Rest API\", isDone: false},\n            {id: v1(), title: \"GraphQL\", isDone: false},\n        ]\n    })\n    const removeTask = (taskId:string)=> {\n        // setTasks(tasks.filter((el)=>el.id!==taskId))\n    }\n\n    const AddMessage = (value:string)=> {\n        let NewTask = {id: v1(), title: value, isDone: true}\n\n        // setTasks([NewTask,...tasks])\n    }\n\n\n\n\n\n\n    const filteredTask =(nameButton:FilterValueType)=> {\n  setTodolists(todolists.map((el)=>el.id))\n    }\n\n    const changeStatus = (id:string,e:boolean)=> {\n        // setTasks(tasks.map((el)=>el.id===id ? {...el,isDone: e}: el))\n    }\n    return (\n        <div className=\"App\">\n            {todolists.map((el)=>{\n                let filtered =tasks[el.id]\n                if (el.filter==='Active'){filtered=tasks[el.id].filter((el)=>el.isDone===false)}\n                if (el.filter==='Completed'){filtered=tasks[el.id].filter((el)=>el.isDone===true)}\n                return (\n                    <Todolist  title ={el.title}\n                               task={filtered}\n                               removeTask={removeTask}\n                               filteredTask={filteredTask}\n                               AddMessage={AddMessage}\n                               changeStatus={changeStatus}\n                               Filter={el.filter}/>\n                )\n            })}\n\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}