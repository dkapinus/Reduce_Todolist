{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { reducer } from \"./Reducer/reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // let [tasks, setTasks] = useState([\n  //     { id: v1(), title: \"HTML&CSS\", isDone: true },\n  //     { id: v1(), title: \"JS\", isDone: true },\n  //     { id: v1(), title: \"ReactJS\", isDone: false },\n  //     { id: v1(), title: \"Rest API\", isDone: false },\n  //     { id: v1(), title: \"GraphQL\", isDone: false },\n  // ]);\n\n  let [tasks, dispatchTasks] = useReducer(reducer, [{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  function removeTask(id) {\n    let filteredTasks = tasks.filter(t => t.id != id);\n    setTasks(filteredTasks);\n  }\n  function addTask(title) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    let newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  }\n  let [filter, setFilter] = useState(\"all\");\n  let tasksForTodolist = tasks;\n  if (filter === \"active\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === false);\n  }\n  if (filter === \"completed\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === true);\n  }\n  function changeFilter(value) {\n    setFilter(value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: \"What to learn\",\n      tasks: tasksForTodolist,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Uq2J5p/Hk2123CuT4Kf1w4kaN8I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useState","Todolist","v1","reducer","App","tasks","dispatchTasks","id","title","isDone","removeTask","filteredTasks","filter","t","setTasks","addTask","task","newTasks","setFilter","tasksForTodolist","changeFilter","value"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useReducer, useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport { v1 } from 'uuid';\r\nimport {reducer} from \"./Reducer/reducer\";\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\nfunction App() {\r\n\r\n    // let [tasks, setTasks] = useState([\r\n    //     { id: v1(), title: \"HTML&CSS\", isDone: true },\r\n    //     { id: v1(), title: \"JS\", isDone: true },\r\n    //     { id: v1(), title: \"ReactJS\", isDone: false },\r\n    //     { id: v1(), title: \"Rest API\", isDone: false },\r\n    //     { id: v1(), title: \"GraphQL\", isDone: false },\r\n    // ]);\r\n\r\n    let [tasks, dispatchTasks] = useReducer(reducer,[\r\n        { id: v1(), title: \"HTML&CSS\", isDone: true },\r\n        { id: v1(), title: \"JS\", isDone: true },\r\n        { id: v1(), title: \"ReactJS\", isDone: false },\r\n        { id: v1(), title: \"Rest API\", isDone: false },\r\n        { id: v1(), title: \"GraphQL\", isDone: false },\r\n    ]);\r\n\r\n\r\n    function removeTask(id: string) {\r\n        let filteredTasks = tasks.filter(t => t.id != id);\r\n        setTasks(filteredTasks);\r\n    }\r\n\r\n    function addTask(title: string) {\r\n        let task = { id: v1(), title: title, isDone: false };\r\n        let newTasks = [task, ...tasks];\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    let tasksForTodolist = tasks;\r\n\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title=\"What to learn\"\r\n                      tasks={tasksForTodolist}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n                      addTask={addTask} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAO,WAAW;AAClB,SAAQC,QAAQ,QAAO,YAAY;AACnC,SAASC,EAAE,QAAQ,MAAM;AACzB,SAAQC,OAAO,QAAO,mBAAmB;AAAC;AAI1C,SAASC,GAAG,GAAG;EAAA;EAEX;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAI,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGP,UAAU,CAACI,OAAO,EAAC,CAC5C;IAAEI,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC7C;IAAEF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC,EACvC;IAAEF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC7C;IAAEF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC9C;IAAEF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC,CAChD,CAAC;EAGF,SAASC,UAAU,CAACH,EAAU,EAAE;IAC5B,IAAII,aAAa,GAAGN,KAAK,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,IAAIA,EAAE,CAAC;IACjDO,QAAQ,CAACH,aAAa,CAAC;EAC3B;EAEA,SAASI,OAAO,CAACP,KAAa,EAAE;IAC5B,IAAIQ,IAAI,GAAG;MAAET,EAAE,EAAEL,EAAE,EAAE;MAAEM,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAE;IAAM,CAAC;IACpD,IAAIQ,QAAQ,GAAG,CAACD,IAAI,EAAE,GAAGX,KAAK,CAAC;IAC/BS,QAAQ,CAACG,QAAQ,CAAC;EACtB;EAEA,IAAI,CAACL,MAAM,EAAEM,SAAS,CAAC,GAAGlB,QAAQ,CAAmB,KAAK,CAAC;EAE3D,IAAImB,gBAAgB,GAAGd,KAAK;EAE5B,IAAIO,MAAM,KAAK,QAAQ,EAAE;IACrBO,gBAAgB,GAAGd,KAAK,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,MAAM,KAAK,KAAK,CAAC;EAC5D;EACA,IAAIG,MAAM,KAAK,WAAW,EAAE;IACxBO,gBAAgB,GAAGd,KAAK,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,MAAM,KAAK,IAAI,CAAC;EAC3D;EAEA,SAASW,YAAY,CAACC,KAAuB,EAAE;IAC3CH,SAAS,CAACG,KAAK,CAAC;EACpB;EAIA,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB,QAAC,QAAQ;MAAC,KAAK,EAAC,eAAe;MACrB,KAAK,EAAEF,gBAAiB;MACxB,UAAU,EAAET,UAAW;MACvB,YAAY,EAAEU,YAAa;MAC3B,OAAO,EAAEL;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC5B;AAEd;AAAC,GAxDQX,GAAG;AAAA,KAAHA,GAAG;AA0DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}