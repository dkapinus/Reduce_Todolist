{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  let {\n    name,\n    task,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 26\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Todolist","name","task","props","map","el","title","isDone","id"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React from 'react';\n\ntype  TodolistType = {\n    name:string\n    task:TaskType[]\n}\n\ntype TaskType = {\n       id:string,\n       title:string,\n       isDone:boolean\n}\n\nexport const Todolist:React.FC<TodolistType> = ({\n                                                    name,\n                                                    task,\n                                                    ...props\n                                                }) => {\n    return (\n        <div>\n            <h3>{name}</h3>\n            <input/>\n            <button>Add</button>\n            <ul>{task.map((el)=>{\n                return ( <li key={el.id}>\n                    {el.title}\n                    <input checked={el.isDone}/>\n                </li>)\n            })}\n\n            </ul>\n\n        </div>\n    );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAa1B,OAAO,MAAMC,QAA+B,GAAG,QAIO;EAAA,IAJN;IACIC,IAAI;IACJC,IAAI;IACJ,GAAGC;EACP,CAAC;EAC7C,oBACI;IAAA,wBACI;MAAA,UAAKF;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACf;MAAA;MAAA;MAAA;IAAA,QAAQ,eACR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MAAA,UAAKC,IAAI,CAACE,GAAG,CAAEC,EAAE,IAAG;QAChB,oBAAS;UAAA,WACJA,EAAE,CAACC,KAAK,eACT;YAAO,OAAO,EAAED,EAAE,CAACE;UAAO;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA,GAFdF,EAAE,CAACG,EAAE;UAAA;UAAA;UAAA;QAAA,QAGlB;MACT,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEH;AAEd,CAAC;AAAC,KArBWR,QAA+B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}