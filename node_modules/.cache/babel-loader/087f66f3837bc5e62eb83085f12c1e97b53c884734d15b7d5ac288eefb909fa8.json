{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  function removeTask(id) {\n    let filteredTasks = tasks.filter(t => t.id != id);\n    setTasks(filteredTasks);\n  }\n  function addTask(title) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    let newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  }\n  function changeCheBox(check) {\n    let newTasksCheck = [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: check\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: check\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: check\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: check\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: check\n    }];\n    setTasks(newTasksCheck);\n  }\n  let [filter, setFilter] = useState(\"all\");\n  let tasksForTodolist = tasks;\n  if (filter === \"active\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === false);\n  }\n  if (filter === \"completed\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === true);\n  }\n  function changeFilter(value) {\n    setFilter(value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: \"What to learn\",\n      tasks: tasksForTodolist,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      addTask: addTask,\n      changeCheBox: changeCheBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Bnle718jrbwycNiQcPnEsHbz2nw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","tasks","setTasks","id","title","isDone","removeTask","filteredTasks","filter","t","addTask","task","newTasks","changeCheBox","check","newTasksCheck","setFilter","tasksForTodolist","changeFilter","value"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport { v1 } from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\nfunction App() {\r\n\r\n    let [tasks, setTasks] = useState([\r\n        { id: v1(), title: \"HTML&CSS\", isDone: true },\r\n        { id: v1(), title: \"JS\", isDone: true },\r\n        { id: v1(), title: \"ReactJS\", isDone: false },\r\n        { id: v1(), title: \"Rest API\", isDone: false },\r\n        { id: v1(), title: \"GraphQL\", isDone: false },\r\n    ]);\r\n\r\n    function removeTask(id: string) {\r\n        let filteredTasks = tasks.filter(t => t.id != id);\r\n        setTasks(filteredTasks);\r\n    }\r\n\r\n    function addTask(title: string) {\r\n        let task = { id: v1(), title: title, isDone: false };\r\n        let newTasks = [task, ...tasks];\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    function changeCheBox (check:boolean) {\r\n\r\n        let newTasksCheck = [\r\n            { id: v1(), title: \"HTML&CSS\", isDone: check },\r\n                { id: v1(), title: \"JS\", isDone: check },\r\n                { id: v1(), title: \"ReactJS\", isDone: check},\r\n                { id: v1(), title: \"Rest API\", isDone: check },\r\n                { id: v1(), title: \"GraphQL\", isDone: check },\r\n            ];\r\n        setTasks(newTasksCheck);\r\n    }\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    let tasksForTodolist = tasks;\r\n\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title=\"What to learn\"\r\n                      tasks={tasksForTodolist}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n                      addTask={addTask}\r\n                      changeCheBox={changeCheBox}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}