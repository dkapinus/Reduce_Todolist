{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  let {\n    task,\n    title,\n    removeTask,\n    ...props\n  } = _ref;\n  const onClickHandlerRemoveTask = taskId => {\n    removeTask(taskId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onClickHandlerRemoveTask(el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 20\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Todolist","task","title","removeTask","props","onClickHandlerRemoveTask","taskId","map","el","isDone","id"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React from 'react';\n\n\ntype TodolistType = {\n    title:string;\n    task:TaskType[]\n    removeTask:(taskId:string)=>void\n}\n\ntype TaskType= {\n    id:string;\n    title:string;\n    isDone:boolean\n}\n\n\n\n\n\n\nexport  const Todolist:React.FC<TodolistType> = ({task,title,removeTask,...props}) => {\n\n\n    const onClickHandlerRemoveTask = (taskId:string)=> {\n        removeTask(taskId)\n    }\n\n\n\n    return (\n        <div>\n            <h3>{title}</h3>\n            <input/>\n            <button>Add</button>\n           <ul>{task.map((el)=>{\n               return( <li key={el.id}>\n                   {el.title}\n                   <input type={\"checkbox\"} checked={el.isDone}/>\n                   <button onClick={()=>onClickHandlerRemoveTask(el.id)}>X</button>\n               </li>)\n               })\n\n           }\n\n           </ul>\n\n            <button>All</button>\n            <button>Active</button>\n            <button>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAoB1B,OAAQ,MAAMC,QAA+B,GAAG,QAAsC;EAAA,IAArC;IAACC,IAAI;IAACC,KAAK;IAACC,UAAU;IAAC,GAAGC;EAAK,CAAC;EAG7E,MAAMC,wBAAwB,GAAIC,MAAa,IAAI;IAC/CH,UAAU,CAACG,MAAM,CAAC;EACtB,CAAC;EAID,oBACI;IAAA,wBACI;MAAA,UAAKJ;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAA;MAAA;MAAA;IAAA,QAAQ,eACR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACrB;MAAA,UAAKD,IAAI,CAACM,GAAG,CAAEC,EAAE,IAAG;QAChB,oBAAQ;UAAA,WACHA,EAAE,CAACN,KAAK,eACT;YAAO,IAAI,EAAE,UAAW;YAAC,OAAO,EAAEM,EAAE,CAACC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAE,eAC9C;YAAQ,OAAO,EAAE,MAAIJ,wBAAwB,CAACG,EAAE,CAACE,EAAE,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW;QAAA,GAHnDF,EAAE,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAIjB;MACL,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAID,eAEJ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEd,CAAC;AAAC,KA/BYV,QAA+B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}