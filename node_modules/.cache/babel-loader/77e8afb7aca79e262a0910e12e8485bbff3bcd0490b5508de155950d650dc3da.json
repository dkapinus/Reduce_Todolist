{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [todolist, settodolist] = useState([{\n    id: v1(),\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: v1(),\n    title: 'What to buy',\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  const deleteTask = id => {\n    let newTask = tasks.filter(el => el.id !== id);\n    setTasks(newTask);\n    return newTask;\n  };\n  let [filtered, setFiltered] = useState('all');\n  const filter = nameButton => {\n    setFiltered(nameButton);\n  };\n  const addMessage = inputValue => {\n    let newTask = {\n      id: v1(),\n      title: inputValue,\n      isDone: true\n    };\n    setTasks([newTask, ...tasks]);\n  };\n  const FilteredButton = () => {\n    let newTask = tasks;\n    if (filtered === 'active') {\n      newTask = tasks.filter(el => el.isDone === false);\n    }\n    if (filtered === 'completed') {\n      newTask = tasks.filter(el => el.isDone === true);\n    }\n    return newTask;\n  };\n  const InputCheck = (event, id) => {\n    return setTasks(tasks.map(el => el.id === id ? {\n      ...el,\n      isDone: event\n    } : el));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolist.map(el => {\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        task: FilteredButton(),\n        title: 'What to learn',\n        filter: filter,\n        deleteTask: deleteTask,\n        addMessage: addMessage,\n        InputCheck: InputCheck,\n        Filter: filtered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ta1u/ovSgSyZIdCk27960sowriE=\");\n_c = App;\nexport default App;\n\n//-------------------------------------------------------------------------------------------------------\n//\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\n//\n// function App() {\n//\n//     let [tasks, setTasks] = useState([\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\n//         {id: v1(), title: \"JS\", isDone: true},\n//         {id: v1(), title: \"ReactJS\", isDone: false},\n//         {id: v1(), title: \"Rest API\", isDone: false},\n//         {id: v1(), title: \"GraphQL\", isDone: false},\n//     ]);\n//\n//     function removeTask(id: string) {\n//         let filteredTasks = tasks.filter(t => t.id != id);\n//         setTasks(filteredTasks);\n//     }\n//\n//     function addTask(title: string) {\n//         let task = {id: v1(), title: title, isDone: false};\n//         let newTasks = [task, ...tasks];\n//         setTasks(newTasks);\n//     }\n//\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\n//\n//     let tasksForTodolist = tasks;\n//\n//     if (filter === \"active\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\n//     }\n//     if (filter === \"completed\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\n//     }\n//\n//     function changeFilter(value: FilterValuesType) {\n//         setFilter(value);\n//     }\n//\n//\n//     return (\n//         <div className=\"App\">\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <input placeholder={'A lot of boring information'}/>\n//                     <div>\n//                         <button>Boring Button 1</button>\n//                         <button>Boring Button 2</button>\n//                         <button>Boring Button 3</button>\n//                     </div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}/>\n//         </div>\n//     );\n// }\n//\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","todolist","settodolist","id","title","filter","tasks","setTasks","isDone","deleteTask","newTask","el","filtered","setFiltered","nameButton","addMessage","inputValue","FilteredButton","InputCheck","event","map"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport { v1 } from 'uuid';\r\n\r\ntype TodolisistType ={\r\n    id:string,\r\n    title:string,\r\n    filter:FilterValuesType\r\n}\r\n\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\nfunction App() {\r\n\r\n    let [todolist,settodolist]=useState<TodolisistType[]>([\r\n        {id:v1(),title:'What to learn',filter:'all'},\r\n        {id:v1(),title: 'What to buy',filter:'all'},\r\n    ])\r\n\r\n    let [tasks, setTasks] = useState([\r\n        { id: v1(), title: \"HTML&CSS\", isDone: true },\r\n        { id: v1(), title: \"JS\", isDone: true },\r\n        { id: v1(), title: \"ReactJS\", isDone: false },\r\n        { id: v1(), title: \"Rest API\", isDone: false },\r\n        { id: v1(), title: \"GraphQL\", isDone: false },\r\n    ]);\r\n\r\nconst  deleteTask = (id:string)=> {\r\n\r\n   let  newTask=tasks.filter((el)=>el.id !==id)\r\n    setTasks(newTask)\r\n    return newTask\r\n}\r\n\r\nlet [filtered,setFiltered]=useState<FilterValuesType>('all')\r\n\r\nconst filter = (nameButton:FilterValuesType)=> {\r\nsetFiltered(nameButton)\r\n}\r\n\r\nconst addMessage = (inputValue:string)=> {\r\n    let newTask = { id: v1(), title: inputValue, isDone: true }\r\n    setTasks([newTask,...tasks])\r\n}\r\nconst FilteredButton = ()=> {\r\n    let newTask =tasks\r\n    if(filtered==='active'){newTask=tasks.filter((el)=>el.isDone===false)}\r\n    if(filtered==='completed'){newTask=tasks.filter((el)=>el.isDone===true)}\r\n    return newTask\r\n}\r\n\r\nconst InputCheck = (event:boolean,id:string)=> {\r\n    return setTasks(tasks.map((el)=>el.id===id ? {...el,isDone:event}:el))\r\n\r\n}\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {todolist.map((el)=>{\r\n                return(\r\n                    <Todolist task={FilteredButton()}  title={'What to learn'}\r\n                              filter={filter}\r\n                              deleteTask={deleteTask}\r\n                              addMessage={addMessage}\r\n                              InputCheck={InputCheck}\r\n                              Filter={filtered}/>\r\n                )\r\n            })}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------------------------------------------\r\n//\r\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n//\r\n// function App() {\r\n//\r\n//     let [tasks, setTasks] = useState([\r\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n//         {id: v1(), title: \"JS\", isDone: true},\r\n//         {id: v1(), title: \"ReactJS\", isDone: false},\r\n//         {id: v1(), title: \"Rest API\", isDone: false},\r\n//         {id: v1(), title: \"GraphQL\", isDone: false},\r\n//     ]);\r\n//\r\n//     function removeTask(id: string) {\r\n//         let filteredTasks = tasks.filter(t => t.id != id);\r\n//         setTasks(filteredTasks);\r\n//     }\r\n//\r\n//     function addTask(title: string) {\r\n//         let task = {id: v1(), title: title, isDone: false};\r\n//         let newTasks = [task, ...tasks];\r\n//         setTasks(newTasks);\r\n//     }\r\n//\r\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n//\r\n//     let tasksForTodolist = tasks;\r\n//\r\n//     if (filter === \"active\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n//     }\r\n//     if (filter === \"completed\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n//     }\r\n//\r\n//     function changeFilter(value: FilterValuesType) {\r\n//         setFilter(value);\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <input placeholder={'A lot of boring information'}/>\r\n//                     <div>\r\n//                         <button>Boring Button 1</button>\r\n//                         <button>Boring Button 2</button>\r\n//                         <button>Boring Button 3</button>\r\n//                     </div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}/>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}