{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { v1 } from 'uuid';\nimport { Todolist } from \"./Todolist\";\nimport { SuperInput } from \"./Components/SuperInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'All'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'Completed'\n  }]);\n  let [tasks, setTasks] = useState({\n    [todolistID1]: [{\n      id: v1(),\n      title: 'HTML&CSS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'JS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'ReactJS',\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todolistID2]: [{\n      id: v1(),\n      title: 'Rest API',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'GraphQL',\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }]\n  });\n  const removeTask = (todolistID, taskId) => {\n    // setTasks(tasks.filter((el)=>el.id!==taskId))\n    setTasks({\n      ...tasks,\n      [todolistID]: tasks[todolistID].filter(el => el.id !== taskId)\n    });\n  };\n  const AddMessage = (todolistID, value) => {\n    let NewTask = {\n      id: v1(),\n      title: value,\n      isDone: true\n    };\n    setTasks({\n      ...tasks,\n      [todolistID]: [NewTask, ...tasks[todolistID]]\n    });\n\n    // setTasks([NewTask,...tasks])\n  };\n\n  const filteredTask = (todolistID, nameButton) => {\n    setTodolists(todolists.map(el => el.id === todolistID ? {\n      ...el,\n      filter: nameButton\n    } : el));\n  };\n  const changeStatus = (todolistID, id, e) => {\n    // setTasks(tasks.map((el)=>el.id===id ? {...el,isDone: e}: el))\n    setTasks({\n      ...tasks,\n      [todolistID]: tasks[todolistID].map(el => el.id === id ? {\n        ...el,\n        isDone: e\n      } : el)\n    });\n  };\n  const deleteTodolist = todolistID => {\n    setTodolists(todolists.filter(el => el.id !== todolistID));\n  };\n  const AddTodolist = value => {\n    let todolistID3 = v1();\n    let NewTask = {\n      id: todolistID3,\n      title: value,\n      filter: 'All'\n    };\n    setTodolists([...todolists, NewTask]);\n    setTasks({\n      [todolistID3]: []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SuperInput, {\n      AddMessage: AddTodolist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), todolists.map(el => {\n      let filtered = tasks[el.id];\n      if (el.filter === 'Active') {\n        filtered = tasks[el.id].filter(el => el.isDone === false);\n      }\n      if (el.filter === 'Completed') {\n        filtered = tasks[el.id].filter(el => el.isDone === true);\n      }\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        todolistID: el.id,\n        title: el.title,\n        task: filtered,\n        removeTask: removeTask,\n        filteredTask: filteredTask,\n        AddMessage: AddMessage,\n        changeStatus: changeStatus,\n        Filter: el.filter,\n        deleteTodolist: deleteTodolist\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Hh5+XECSLSpBYL13EMjq9pfx3fE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","v1","Todolist","SuperInput","App","todolistID1","todolistID2","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","removeTask","todolistID","taskId","el","AddMessage","value","NewTask","filteredTask","nameButton","map","changeStatus","e","deleteTodolist","AddTodolist","todolistID3","filtered"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {v1} from 'uuid'\nimport {TaskType, Todolist} from \"./Todolist\";\nimport {SuperInput} from \"./Components/SuperInput\";\n\n\nexport type FilterValueType = 'All'|'Active'|'Completed'\n\ntype TodolistsType = {\n    id:string;\n    title:string;\n    filter:FilterValueType\n}\n\n\n\nfunction App() {\n\n\n    let todolistID1 = v1()\n    let todolistID2 = v1()\n\n    let [todolists, setTodolists] = useState<TodolistsType[]>([\n        {id: todolistID1, title: 'What to learn', filter: 'All'},\n        {id: todolistID2, title: 'What to buy', filter: 'Completed'},\n    ])\n\n    let [tasks, setTasks] = useState({\n        [todolistID1]: [\n            {id: v1(), title: 'HTML&CSS', isDone: true},\n            {id: v1(), title: 'JS', isDone: true},\n            {id: v1(), title: 'ReactJS', isDone: false},\n            {id: v1(), title: \"Rest API\", isDone: false},\n            {id: v1(), title: \"GraphQL\", isDone: false},\n\n        ],\n        [todolistID2]: [\n            {id: v1(), title: 'Rest API', isDone: true},\n            {id: v1(), title: 'GraphQL', isDone: false},\n            {id: v1(), title: \"ReactJS\", isDone: false},\n            {id: v1(), title: \"Rest API\", isDone: false},\n            {id: v1(), title: \"GraphQL\", isDone: false},\n        ]\n    })\n    const removeTask = (todolistID:string,taskId:string)=> {\n        // setTasks(tasks.filter((el)=>el.id!==taskId))\n        setTasks({...tasks,[todolistID]:tasks[todolistID].filter((el)=>el.id!==taskId)})\n    }\n\n    const AddMessage = (todolistID:string,value:string)=> {\n        let NewTask = {id: v1(), title: value, isDone: true}\n        setTasks({...tasks,[todolistID]:[NewTask,...tasks[todolistID]]})\n\n        // setTasks([NewTask,...tasks])\n\n    }\n\n\n\n\n\n\n    const filteredTask =(todolistID:string,nameButton:FilterValueType)=> {\n\n   setTodolists(todolists.map((el)=>el.id===todolistID ? {...el, filter:nameButton}: el))\n    }\n\n\n\n    const changeStatus = (todolistID:string,id:string,e:boolean)=> {\n        // setTasks(tasks.map((el)=>el.id===id ? {...el,isDone: e}: el))\n        setTasks({...tasks,[todolistID]:tasks[todolistID].map((el)=>el.id===id ? {...el,isDone: e}: el)})\n    }\n    const deleteTodolist = (todolistID:string)=> {\nsetTodolists(todolists.filter((el)=>el.id!==todolistID))\n    }\n\n    const AddTodolist = (value:string)=> {\n        let todolistID3 = v1()\n        let NewTask:TodolistsType={id:todolistID3, title: value, filter: 'All'}\n       setTodolists([...todolists,NewTask])\n        setTasks({[todolistID3]:[]})\n    }\n\n\n    return (\n        <div className=\"App\">\n\n            <SuperInput AddMessage={AddTodolist}/>\n            {todolists.map((el)=>{\n\n                let filtered =tasks[el.id]\n                if (el.filter==='Active'){filtered=tasks[el.id].filter((el)=>el.isDone===false)}\n                if (el.filter==='Completed'){filtered=tasks[el.id].filter((el)=>el.isDone===true)}\n                return (\n\n                    <Todolist\n\n                               key={el.id}\n                               todolistID={el.id}\n                               title ={el.title}\n                               task={filtered}\n                               removeTask={removeTask}\n                               filteredTask={filteredTask}\n                               AddMessage={AddMessage}\n                               changeStatus={changeStatus}\n                               Filter={el.filter}\n                               deleteTodolist={deleteTodolist}\n                    />\n                )\n            })}\n\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}