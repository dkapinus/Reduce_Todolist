{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\";\nimport React from 'react';\nimport { Input } from \"./Components/Input\";\nimport { EditableSpan } from \"./Components/EditableSpan\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todolist(props) {\n  const removeTodolist = () => props.removeTodolist(props.todolistId);\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.todolistId);\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.todolistId);\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todolistId);\n  const AddInput = title => {\n    props.addTask(title, props.todolistId);\n  };\n  const ChangeTodolistTitle = value => {\n    props.ChangeTodolistTitle(props.todolistId, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(EditableSpan, {\n        title: props.title,\n        ChangeTask: ChangeTodolistTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        style: {\n          maxWidth: '100px',\n          maxHeight: '30px',\n          minWidth: '100px',\n          minHeight: '30px'\n        },\n        onClick: removeTodolist,\n        \"aria-label\": \"delete\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        addTask: AddInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => {\n        const onClickHandler = () => props.removeTask(t.id, props.todolistId);\n        const onChangeHandler = e => {\n          let newIsDoneValue = e.currentTarget.checked;\n          props.changeTaskStatus(t.id, newIsDoneValue, props.todolistId);\n        };\n        const ChangeTask = value => {\n          props.changeTask(props.todolistId, t.id, value);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: t.isDone ? \"is-done\" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: onChangeHandler,\n            checked: t.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(EditableSpan, {\n              title: t.title,\n              ChangeTask: ChangeTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              maxWidth: '100px',\n              maxHeight: '30px',\n              minWidth: '100px',\n              minHeight: '30px'\n            },\n            onClick: onClickHandler,\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: props.filter === 'all' ? \"outlined\" : \"contained\",\n        size: \"small\",\n        onClick: onAllClickHandler,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: props.filter === 'active' ? \"active-filter\" : \"\",\n        size: \"small\",\n        onClick: onActiveClickHandler,\n        variant: \"contained\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: props.filter === 'completed' ? \"active-filter\" : \"\",\n        size: \"small\",\n        onClick: onCompletedClickHandler,\n        variant: \"contained\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Input","EditableSpan","Button","DeleteIcon","IconButton","Todolist","props","removeTodolist","todolistId","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","AddInput","title","addTask","ChangeTodolistTitle","value","maxWidth","maxHeight","minWidth","minHeight","tasks","map","t","onClickHandler","removeTask","id","onChangeHandler","e","newIsDoneValue","currentTarget","checked","changeTaskStatus","ChangeTask","changeTask","isDone","filter"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport {Input} from \"./Components/Input\";\r\nimport {EditableSpan} from \"./Components/EditableSpan\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    todolistId: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    filter: FilterValuesType\r\n    changeTask:(todolistId: string,taskId:string,value:string)=>void\r\n    ChangeTodolistTitle:(todolistId: string,value:string)=>void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n\r\n    const removeTodolist = () => props.removeTodolist(props.todolistId)\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.todolistId);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.todolistId);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todolistId);\r\n\r\n    const AddInput = (title: string)=> {\r\n        props.addTask(title,props.todolistId)\r\n    }\r\n\r\n    const ChangeTodolistTitle = (value:string)=> {\r\n    props.ChangeTodolistTitle(props.todolistId,value)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <h3> <EditableSpan title={props.title} ChangeTask={ChangeTodolistTitle}/>\r\n\r\n            <IconButton style={{maxWidth: '100px', maxHeight: '30px', minWidth: '100px', minHeight: '30px'}} onClick={removeTodolist} aria-label=\"delete\">\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </h3>\r\n        <div>\r\n           <Input   addTask={AddInput}/>\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id, props.todolistId)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        let newIsDoneValue = e.currentTarget.checked;\r\n                        props.changeTaskStatus(t.id, newIsDoneValue, props.todolistId);\r\n                    }\r\n                    const ChangeTask = (value:string)=> {\r\n                        props.changeTask(props.todolistId,t.id,value)\r\n                    }\r\n                    return <li key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\" onChange={onChangeHandler} checked={t.isDone}/>\r\n                        <span><EditableSpan title={t.title} ChangeTask={ChangeTask}/></span>\r\n\r\n\r\n                        <IconButton style={{maxWidth: '100px', maxHeight: '30px', minWidth: '100px', minHeight: '30px'}} onClick={onClickHandler} aria-label=\"delete\">\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <Button variant={props.filter === 'all' ? \"outlined\" : \"contained\"} size='small'  onClick={onAllClickHandler} >All</Button>\r\n            <Button className={props.filter === 'active' ? \"active-filter\" : \"\"} size='small'  onClick={onActiveClickHandler} variant=\"contained\">Active</Button>\r\n\r\n            <Button className={props.filter === 'completed' ? \"active-filter\" : \"\"} size='small'  onClick={onCompletedClickHandler} variant=\"contained\">Completed</Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}