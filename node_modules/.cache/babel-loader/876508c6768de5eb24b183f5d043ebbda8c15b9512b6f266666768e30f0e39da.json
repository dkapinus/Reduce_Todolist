{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './Todolist.module.css';\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  _s();\n  const onclickHandlerFilter = nameButton => {\n    props.filtered(nameButton);\n  };\n  const DeleteTask = id => {\n    props.removeTask(id);\n  };\n  let [inputValue, setInputValue] = useState('');\n  const onInputChange = event => {\n    setInputValue(event.currentTarget.value);\n  };\n  const AddMessage = () => {\n    if (inputValue.trim() !== '') {\n      props.addMessage(inputValue.trim());\n    } else {\n      setError('Tittle is reqied');\n    }\n    setInputValue('');\n  };\n  let [error, setError] = useState(null);\n  const onKeyDown = event => {\n    if (event.key === 'Enter') {\n      AddMessage();\n    }\n  };\n  const ChangeInputCheck = (event, id) => {\n    props.ChangeInputCheck(event, id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: error ? s.error : '',\n      onKeyDown: onKeyDown,\n      value: inputValue,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddMessage,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.errorMessage,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            onClick: event => ChangeInputCheck(event.currentTarget.checked, el.id),\n            type: 'checkbox',\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => DeleteTask(el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: 'all',\n      started: () => onclickHandlerFilter('all')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: 'active',\n      started: () => onclickHandlerFilter('active')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: 'completed',\n      started: () => onclickHandlerFilter('completed')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this);\n};\n_s(Todolist, \"WUuHGlZqWcjzUZhyb9dg3zLLc6E=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","s","Button","Todolist","props","onclickHandlerFilter","nameButton","filtered","DeleteTask","id","removeTask","inputValue","setInputValue","onInputChange","event","currentTarget","value","AddMessage","trim","addMessage","setError","error","onKeyDown","key","ChangeInputCheck","title","errorMessage","task","map","el","checked","isDone"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent,KeyboardEvent, useState} from 'react';\nimport {FilterValuesType} from './App';\nimport  s from './Todolist.module.css'\nimport {Button} from \"./Button\";\n\ntype TodolistType = {\n   title:string\n    task:ArrayTypeTask[]\n    filtered:(nameButton:FilterValuesType)=>void\n    removeTask:(id:string)=>void\n    addMessage:(inputValue:string)=>void\n    ChangeInputCheck:(event:boolean,id:string)=>void\n\n}\n\ntype ArrayTypeTask = {\n    id:string;\n    title:string;\n    isDone:boolean;\n}\n\n\nexport const Todolist = (props:TodolistType) => {\n\n\n    const onclickHandlerFilter = (nameButton: FilterValuesType) => {\n        props.filtered(nameButton)\n    }\n\n    const DeleteTask = (id: string) => {\n        props.removeTask(id)\n    }\n\n    let [inputValue, setInputValue] = useState('')\n\n    const onInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(event.currentTarget.value)\n    }\n\n    const AddMessage = () => {\n        if(inputValue.trim() !==''){ props.addMessage(inputValue.trim())}\n        else {setError('Tittle is reqied')}\nsetInputValue('')\n    }\n\n    let [error,setError]=useState<string|null>(null)\n\n\n\n    const onKeyDown = (event:KeyboardEvent<HTMLInputElement>)=> {\n        if(event.key==='Enter'){AddMessage()}\n    }\n\n    const ChangeInputCheck = (event:boolean,id:string)=> {\n        props.ChangeInputCheck(event,id)\n    }\n        return (\n            <div>\n                <h3>{props.title}</h3>\n               <input className={error ? s.error:''} onKeyDown={onKeyDown} value={inputValue} onChange={onInputChange}/>\n                <button onClick={AddMessage}>Add</button>\n                {error && <div className={s.errorMessage}>{error}</div>}\n                <ul>\n                    {props.task.map((el) => {\n                        return (\n                            <li key={el.id}>\n                                {el.title}\n                                <input onClick={(event)=>ChangeInputCheck(event.currentTarget.checked,el.id)} type={'checkbox'} checked={el.isDone}/>\n                                <button onClick={() => DeleteTask(el.id)}>X</button>\n\n                            </li>\n                        )\n                    })}\n                </ul>\n                <Button name={'all'} started={()=>onclickHandlerFilter('all')}/>\n                <Button name={'active'} started={()=>onclickHandlerFilter('active')}/>\n                <Button name={'completed'} started={()=>onclickHandlerFilter('completed')}/>\n                {/*<button onClick={() => onclickHandlerFilter('all')}>All</button>*/}\n                {/*<button onClick={() => onclickHandlerFilter('active')}>Active</button>*/}\n                {/*<button onClick={() => onclickHandlerFilter('completed')}>Completed</button>*/}\n\n            </div>\n        );\n    };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}