{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\";\nimport React from 'react';\nimport s from \"./Todolist.module.css\";\nimport { SuperInput } from \"./Components/SuperInput\";\nimport { EnableSpan } from \"./Components/EnableSpan\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  let {\n    todolistID,\n    task,\n    title,\n    removeTask,\n    filteredTask,\n    AddMessage,\n    changeStatus,\n    Filter,\n    deleteTodolist,\n    changeTitleSpan,\n    ...props\n  } = _ref;\n  const onClickHandlerRemoveTask = (todolistID, taskId) => {\n    removeTask(todolistID, taskId);\n  };\n  const onclickFilter = (todolistID, nameButton) => {\n    filteredTask(todolistID, nameButton);\n  };\n  const onclickHandlerStatusInput = (todolistID, id, e) => {\n    changeStatus(todolistID, id, e);\n  };\n  const DeleteTodolist = todolistID => {\n    deleteTodolist(todolistID);\n  };\n  const AddMessageFunction = value => {\n    AddMessage(todolistID, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [title, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => DeleteTodolist(todolistID),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SuperInput, {\n      AddMessage: AddMessageFunction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: task.map(el => {\n        const ChangeTitleSpan = e => {\n          changeTitleSpan(todolistID, el.id, e);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: el.isDone ? s.Completed : '',\n          children: [/*#__PURE__*/_jsxDEV(EnableSpan, {\n            titleSpan: ChangeTitleSpan,\n            title: el.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => onclickHandlerStatusInput(todolistID, el.id, e.currentTarget.checked),\n            type: \"checkbox\",\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onClickHandlerRemoveTask(todolistID, el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 20\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: Filter === 'All' ? s.active : '',\n      onClick: () => onclickFilter(todolistID, 'All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: Filter === 'Active' ? s.active : '',\n      onClick: () => onclickFilter(todolistID, 'Active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: Filter === 'Completed' ? s.active : '',\n      onClick: () => onclickFilter(todolistID, 'Completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","s","SuperInput","EnableSpan","Todolist","todolistID","task","title","removeTask","filteredTask","AddMessage","changeStatus","Filter","deleteTodolist","changeTitleSpan","props","onClickHandlerRemoveTask","taskId","onclickFilter","nameButton","onclickHandlerStatusInput","id","e","DeleteTodolist","AddMessageFunction","value","map","el","ChangeTitleSpan","isDone","Completed","currentTarget","checked","active"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React from 'react';\nimport {FilterValueType} from \"./App\";\nimport s from  \"./Todolist.module.css\"\nimport {SuperInput} from \"./Components/SuperInput\";\nimport {EnableSpan} from \"./Components/EnableSpan\";\n\ntype TodolistType = {\n    todolistID:string\n    title:string;\n    task:TaskType[]\n    removeTask:(todolistID:string,taskId:string)=>void\n    filteredTask:(todolistID:string,nameButton:FilterValueType)=>void\n    AddMessage:(todolistID:string,value:string)=>void\n    changeStatus:(todolistID:string,id:string,e:boolean)=>void\n    Filter:FilterValueType\n    deleteTodolist:(todolistID:string)=>void\n    changeTitleSpan:(todolistID:string,taskId:string,e:string)=>void\n}\n\n export  type TaskType= {\n    id:string;\n    title:string;\n    isDone:boolean\n}\n\n\n\n\n\n\nexport  const Todolist:React.FC<TodolistType> = ({ todolistID,task,\n                                                     title,\n                                                     removeTask,filteredTask,\n                                                     AddMessage, changeStatus,\n                                                     Filter,deleteTodolist,\n                                                     changeTitleSpan,\n                                                     ...props}) => {\n\n\n    const onClickHandlerRemoveTask = (todolistID:string,taskId:string)=> {\n        removeTask(todolistID,taskId)\n    }\n\n    const onclickFilter = (todolistID:string,nameButton:FilterValueType)=> {\n       filteredTask(todolistID,nameButton)\n  }\n\n\n\n     const onclickHandlerStatusInput = (todolistID:string,id:string,e:boolean)=> {\n       changeStatus(todolistID,id,e)\n}\n\n     const DeleteTodolist = (todolistID:string)=> {\n        deleteTodolist(todolistID)\n      }\n\n      const AddMessageFunction = (value:string)=> {\n        AddMessage(todolistID,value)\n\n      }\n\n\n    return (\n        <div>\n            <h3>{title}\n                <button onClick={()=>DeleteTodolist(todolistID)}>X</button>\n            </h3>\n\n               <SuperInput  AddMessage={AddMessageFunction}/>\n           <ul>{task.map((el)=>{\n               const ChangeTitleSpan = (e:string)=> {\n                   changeTitleSpan(todolistID,el.id,e)\n               }\n               return( <li key={el.id}  className={el.isDone ? s.Completed : ''}>\n                  <EnableSpan  titleSpan={ChangeTitleSpan}  title={el.title}/>\n                   <input  onChange={(e)=>onclickHandlerStatusInput(todolistID,el.id,e.currentTarget.checked)} type={\"checkbox\"} checked={el.isDone}/>\n                   <button onClick={()=>onClickHandlerRemoveTask(todolistID,el.id)}>X</button>\n               </li>)\n               })\n\n           }\n\n           </ul>\n\n            <button  className={Filter==='All' ? s.active: ''} onClick={()=>onclickFilter(todolistID,'All')}>All</button>\n            <button className={Filter==='Active' ? s.active: ''} onClick={()=>onclickFilter(todolistID,'Active')}>Active</button>\n            <button className={Filter==='Completed' ? s.active: ''} onClick={()=>onclickFilter(todolistID,'Completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}