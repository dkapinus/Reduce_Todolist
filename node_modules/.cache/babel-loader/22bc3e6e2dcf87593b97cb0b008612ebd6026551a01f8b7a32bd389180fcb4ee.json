{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todolist(props) {\n  _s();\n  let [title, setTitle] = useState(\"\");\n  let [error, setError] = useState(null);\n  const addTask = () => {\n    let newTitle = title.trim();\n    if (newTitle !== \"\") {\n      props.addTask(newTitle, props.todolistId);\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n  const onKeyPressHandler = e => {\n    setError(null);\n    if (e.charCode === 13) {\n      addTask();\n    }\n  };\n  const removeTodolist = () => props.removeTodolist(props.todolistId);\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.todolistId);\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.todolistId);\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todolistId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", props.title, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeTodolist,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: onChangeHandler,\n        onKeyPress: onKeyPressHandler,\n        className: error ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => {\n        const onClickHandler = () => props.removeTask(t.taskId, props.todolistId);\n        const onChangeHandler = e => {\n          let newIsDoneValue = e.currentTarget.checked;\n          props.changeTaskStatus(t.taskId, newIsDoneValue, props.todolistId);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: t.isDone ? \"is-done\" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: onChangeHandler,\n            checked: t.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClickHandler,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, t.taskId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.filter === 'all' ? \"active-filter\" : \"\",\n        onClick: onAllClickHandler,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.filter === 'active' ? \"active-filter\" : \"\",\n        onClick: onActiveClickHandler,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.filter === 'completed' ? \"active-filter\" : \"\",\n        onClick: onCompletedClickHandler,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}\n_s(Todolist, \"MVMLmy4kP556v7E3KHW9YED2Wxk=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","title","setTitle","error","setError","addTask","newTitle","trim","todolistId","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","removeTodolist","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasks","map","t","onClickHandler","removeTask","taskId","newIsDoneValue","checked","changeTaskStatus","isDone","filter"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, useState, KeyboardEvent} from 'react';\r\nimport {FilterValuesType} from './App';\r\n\r\nexport type TaskType = {\r\n    taskId: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    todolistId: number\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todolistId: number) => void\r\n    changeFilter: (value: FilterValuesType, todolistId: number) => void\r\n    addTask: (title: string, todolistId: number) => void\r\n    changeTaskStatus: (taskId: string, isDone: boolean, todolistId: number) => void\r\n    removeTodolist: (todolistId: number) => void\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addTask = () => {\r\n        let newTitle = title.trim();\r\n        if (newTitle !== \"\") {\r\n            props.addTask(newTitle, props.todolistId);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        if (e.charCode === 13) {\r\n            addTask();\r\n        }\r\n    }\r\n\r\n    const removeTodolist = () => props.removeTodolist(props.todolistId)\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.todolistId);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.todolistId);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.todolistId);\r\n\r\n    return <div>\r\n        <h3> {props.title}\r\n            <button onClick={removeTodolist}>x</button>\r\n        </h3>\r\n        <div>\r\n            <input value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   className={error ? \"error\" : \"\"}\r\n            />\r\n            <button onClick={addTask}>+</button>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.taskId, props.todolistId)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        let newIsDoneValue = e.currentTarget.checked;\r\n                        props.changeTaskStatus(t.taskId, newIsDoneValue, props.todolistId);\r\n                    }\r\n\r\n                    return <li key={t.taskId} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\" onChange={onChangeHandler} checked={t.isDone}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={onClickHandler}>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button className={props.filter === 'all' ? \"active-filter\" : \"\"}\r\n                    onClick={onAllClickHandler}>All\r\n            </button>\r\n            <button className={props.filter === 'active' ? \"active-filter\" : \"\"}\r\n                    onClick={onActiveClickHandler}>Active\r\n            </button>\r\n            <button className={props.filter === 'completed' ? \"active-filter\" : \"\"}\r\n                    onClick={onCompletedClickHandler}>Completed\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}