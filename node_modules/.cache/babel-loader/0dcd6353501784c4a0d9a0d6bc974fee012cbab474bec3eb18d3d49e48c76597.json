{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useState } from 'react';\nimport './App.css';\nimport { Todolist } from \"./Todolist\";\nimport { v1 } from 'uuid';\nimport { Input } from \"./Components/Input\";\nimport { TasksRuder } from \"./reducer/TasksRuder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todoListsID1 = v1();\n  let todoListsID2 = v1();\n  let [todoLists, SetTodoLists] = useState([{\n    id: todoListsID1,\n    title: \"Whats to learn\",\n    filter: \"all\"\n  }, {\n    id: todoListsID2,\n    title: \"Whats to buy\",\n    filter: \"all\"\n  }]);\n  let [tasks, dispatchTasks] = useReducer(TasksRuder, [{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  const FilterTask = (todolistId, nameButton) => {\n    SetTodoLists(todoLists.map(el => el.id === todolistId ? {\n      ...el,\n      filter: nameButton\n    } : el));\n  };\n  const removeTask = (todolistId, taskId) => {\n    // setTask(tasks.filter((el)=>el.id!==taskId))\n    setTasks({\n      ...tasks,\n      [todolistId]: tasks[todolistId].filter(el => el.id !== taskId)\n    });\n  };\n  const changeStatus = (todolistId, id, e) => {\n    // setTask(tasks.map((el)=>el.id===id ? {...el,isDone: isDone}: el))\n    setTasks({\n      ...tasks,\n      [todolistId]: tasks[todolistId].map(el => el.id === id ? {\n        ...el,\n        isDone: e\n      } : el)\n    });\n  };\n  const addMessage = (todolistId, valueInput) => {\n    let newTask = {\n      id: v1(),\n      title: valueInput,\n      isDone: true\n    };\n    //    setTask([newTask,...tasks])\n    setTasks({\n      ...tasks,\n      [todolistId]: [newTask, ...tasks[todolistId]]\n    });\n  };\n  const deleteTodolist = todolistId => {\n    SetTodoLists(todoLists.filter(el => el.id !== todolistId));\n  };\n  const AddTodolist = valueInput => {\n    let todoListsID3 = v1();\n    let newTask = {\n      id: todoListsID3,\n      title: valueInput,\n      filter: 'all'\n    };\n    SetTodoLists([newTask, ...todoLists]);\n    setTasks({\n      ...tasks,\n      [todoListsID3]: []\n    });\n  };\n  const changeSpanTask = (todolistId, id, e) => {\n    setTasks({\n      ...tasks,\n      [todolistId]: tasks[todolistId].map(el => el.id === id ? {\n        ...el,\n        title: e\n      } : el)\n    });\n  };\n  const changeSpanTodolist = (todolistId, e) => {\n    SetTodoLists(todoLists.map(el => el.id === todolistId ? {\n      ...el,\n      title: e\n    } : el));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      addMessage: AddTodolist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), todoLists.map(el => {\n      const FilteredTask = () => {\n        let newArrayTask = tasks[el.id];\n        if (el.filter === 'active') {\n          newArrayTask = tasks[el.id].filter(el => el.isDone === false);\n        }\n        if (el.filter === 'completed') {\n          newArrayTask = tasks[el.id].filter(el => el.isDone === true);\n        }\n        return newArrayTask;\n      };\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        id: el.id,\n        title: el.title,\n        task: FilteredTask(),\n        FilterTask: FilterTask,\n        removeTask: removeTask,\n        changeStatus: changeStatus,\n        addMessage: addMessage,\n        filter: el.filter,\n        deleteTodolist: deleteTodolist,\n        changeSpanTask: changeSpanTask,\n        changeSpanTodolist: changeSpanTodolist\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Sed266h88+8msU1OkEwy/P3KjN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useState","Todolist","v1","Input","TasksRuder","App","todoListsID1","todoListsID2","todoLists","SetTodoLists","id","title","filter","tasks","dispatchTasks","isDone","FilterTask","todolistId","nameButton","map","el","removeTask","taskId","setTasks","changeStatus","e","addMessage","valueInput","newTask","deleteTodolist","AddTodolist","todoListsID3","changeSpanTask","changeSpanTodolist","FilteredTask","newArrayTask"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useReducer, useState} from 'react';\r\nimport './App.css';\r\nimport {TaskTypeArray, Todolist} from \"./Todolist\";\r\nimport {v1} from 'uuid'\r\nimport {Input} from \"./Components/Input\";\r\nimport {TasksRuder} from \"./reducer/TasksRuder\";\r\n\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\n\r\ntype TodoListsType = {\r\n    id:string;\r\n    title:string;\r\n    filter:FilterValuesType;\r\n\r\n\r\n}\r\n\r\ntype Tasks = {\r\n    [key:string]:Array<TaskTypeArray>\r\n}\r\n\r\nfunction App() {\r\n\r\n    let todoListsID1=v1()\r\n    let todoListsID2=v1()\r\n\r\n    let [todoLists, SetTodoLists] = useState<TodoListsType[]>([\r\n        {id: todoListsID1, title: \"Whats to learn\", filter: \"all\"},\r\n        {id: todoListsID2, title: \"Whats to buy\", filter: \"all\"},\r\n\r\n    ])\r\n\r\n\r\n    let [tasks, dispatchTasks] = useReducer(TasksRuder,\r\n        [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],);\r\n\r\n\r\n\r\n\r\n      const FilterTask = (todolistId:string,nameButton:FilterValuesType)=> {\r\n        SetTodoLists(todoLists.map((el)=>el.id===todolistId ? {...el,filter:nameButton} :el))\r\n       }\r\n\r\n\r\n\r\n       const removeTask=(todolistId:string,taskId:string)=>{\r\n\r\n        // setTask(tasks.filter((el)=>el.id!==taskId))\r\n           setTasks({...tasks,[todolistId]:tasks[todolistId].filter((el)=>el.id!==taskId)})\r\n       }\r\n\r\n       const  changeStatus=(todolistId:string,id:string,e:boolean)=>{\r\n      // setTask(tasks.map((el)=>el.id===id ? {...el,isDone: isDone}: el))\r\nsetTasks({...tasks,[todolistId]:tasks[todolistId].map((el)=>el.id===id ? {...el,isDone: e}:el)})\r\n\r\n       }\r\n\r\n       const addMessage=(todolistId:string,valueInput:string)=>{\r\n        let newTask= { id: v1(), title: valueInput, isDone: true }\r\n        //    setTask([newTask,...tasks])\r\n           setTasks({...tasks,[todolistId]:[newTask,...tasks[todolistId]]})\r\n       }\r\n\r\n       const deleteTodolist = (todolistId:string)=> {\r\n\r\n          SetTodoLists(todoLists.filter((el)=>el.id!==todolistId))\r\n       }\r\n\r\n       const AddTodolist = (valueInput:string)=> {\r\n           let todoListsID3=v1()\r\n\r\n           let newTask:TodoListsType= { id: todoListsID3, title: valueInput, filter: 'all' }\r\n          SetTodoLists([newTask,...todoLists])\r\n           setTasks({...tasks,[todoListsID3]:[]})\r\n\r\n       }\r\n\r\n       const changeSpanTask=(todolistId:string,id:string,e:string)=>{\r\n\r\n          setTasks({...tasks,[todolistId]:tasks[todolistId].map((el)=>el.id===id ? {...el,title:e }:el)})\r\n       }\r\n\r\n    const changeSpanTodolist=(todolistId:string,e:string)=>{\r\n\r\n          SetTodoLists(todoLists.map((el)=>el.id===todolistId ? {...el,title:e}:el))\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Input addMessage={AddTodolist}/>\r\n\r\n            {todoLists.map((el)=>{\r\n                const FilteredTask = ()=> {\r\n                    let newArrayTask=tasks[el.id]\r\n                    if (el.filter==='active'){newArrayTask=tasks[el.id].filter((el)=>el.isDone===false)}\r\n                    if (el.filter==='completed'){newArrayTask=tasks[el.id].filter((el)=>el.isDone===true)}\r\n                    return newArrayTask\r\n                }\r\n                return (\r\n                    <Todolist\r\n                        key={el.id}\r\n                        id={el.id}\r\n                        title={el.title}\r\n                        task={FilteredTask()}\r\n                        FilterTask={FilterTask}\r\n                        removeTask={removeTask}\r\n                        changeStatus={changeStatus}\r\n                        addMessage={addMessage}\r\n                        filter={el.filter}\r\n                        deleteTodolist={deleteTodolist}\r\n                        changeSpanTask={changeSpanTask}\r\n                        changeSpanTodolist={changeSpanTodolist}\r\n                    />\r\n                )\r\n            })}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}