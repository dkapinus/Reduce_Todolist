{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState({\n    [todolistID1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todolistID2]: [{\n      id: v1(),\n      title: \"HTML&CSS2\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS2\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS2\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API2\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL2\",\n      isDone: false\n    }]\n  });\n  function removeTask(id) {\n    // let filteredTasks = tasks.filter(t => t.id != id);\n    // setTasks(filteredTasks);\n  }\n  function addTask(title) {\n    // let task = {id: v1(), title: title, isDone: false};\n    // let newTasks = [task, ...tasks];\n    // setTasks(newTasks);\n  }\n  function changeStatus(todolistId, taskId, isDone) {\n    // let task = tasks.find(t => t.id === taskId);\n    // if (task) {\n    //     task.isDone = isDone;\n    // }\n    //\n    // setTasks([...tasks]);\n    setTasks({\n      ...tasks,\n      [todolistId]: tasks[todolistId].map(el => el.id === taskId ? {\n        ...el,\n        isDone: isDone\n      } : el)\n    });\n  }\n  function changeFilter(todolistId, value) {\n    setTodolists(todolists.map(el => el.id === todolistId ? {\n      ...el,\n      filter: value\n    } : el));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolists.map(el => {\n      let tasksForTodolist = tasks[el.id];\n      if (el.filter === \"active\") {\n        tasksForTodolist = tasks[el.id].filter(t => t.isDone === false);\n      }\n      if (el.filter === \"completed\") {\n        tasksForTodolist = tasks[el.id].filter(t => t.isDone === true);\n      }\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        todolistId: el.id,\n        title: el.title,\n        tasks: tasksForTodolist,\n        removeTask: removeTask,\n        changeFilter: changeFilter,\n        addTask: addTask,\n        changeTaskStatus: changeStatus,\n        filter: el.filter\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZGwNkYcqGM/L/XCE/iMop3ppRX0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","todolistID1","todolistID2","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","removeTask","addTask","changeStatus","todolistId","taskId","map","el","changeFilter","value","tasksForTodolist","t"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\ntype  TodolistType = {\r\n    id:string;\r\n    title:string;\r\n    filter:FilterValuesType\r\n}\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n    let todolistID1=v1();\r\n    let todolistID2=v1();\r\n\r\n    let [todolists, setTodolists] = useState<Array<TodolistType>>([\r\n        {id: todolistID1, title: 'What to learn', filter: 'all'},\r\n        {id: todolistID2, title: 'What to buy', filter: 'all'},\r\n    ])\r\n\r\n    let [tasks, setTasks] = useState({\r\n        [todolistID1]:[\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],\r\n        [todolistID2]:[\r\n            {id: v1(), title: \"HTML&CSS2\", isDone: true},\r\n            {id: v1(), title: \"JS2\", isDone: true},\r\n            {id: v1(), title: \"ReactJS2\", isDone: false},\r\n            {id: v1(), title: \"Rest API2\", isDone: false},\r\n            {id: v1(), title: \"GraphQL2\", isDone: false},\r\n        ]\r\n    });\r\n\r\n\r\n\r\n    function removeTask(id: string) {\r\n        // let filteredTasks = tasks.filter(t => t.id != id);\r\n        // setTasks(filteredTasks);\r\n    }\r\n\r\n    function addTask(title: string) {\r\n        // let task = {id: v1(), title: title, isDone: false};\r\n        // let newTasks = [task, ...tasks];\r\n        // setTasks(newTasks);\r\n    }\r\n\r\n    function changeStatus(todolistId:string,taskId: string, isDone: boolean) {\r\n        // let task = tasks.find(t => t.id === taskId);\r\n        // if (task) {\r\n        //     task.isDone = isDone;\r\n        // }\r\n        //\r\n        // setTasks([...tasks]);\r\n        setTasks({...tasks,[todolistId]:tasks[todolistId].map((el)=>el.id===taskId ? {...el,isDone: isDone}: el)})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function changeFilter(todolistId:string,value: FilterValuesType) {\r\n        setTodolists(todolists.map((el)=>el.id===todolistId? {...el,filter:value}:el));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {todolists.map((el)=>{\r\n                let  tasksForTodolist =tasks[el.id]\r\n                if (el.filter === \"active\") {\r\n                    tasksForTodolist = tasks[el.id].filter(t => t.isDone === false);\r\n                }\r\n                if (el.filter === \"completed\") {\r\n                    tasksForTodolist = tasks[el.id].filter(t => t.isDone === true);\r\n                }\r\n                return(   <Todolist\r\n                                    key={el.id}\r\n                                    todolistId={el.id}\r\n                                    title={el.title}\r\n                                    tasks={tasksForTodolist}\r\n                                    removeTask={removeTask}\r\n                                    changeFilter={changeFilter}\r\n                                    addTask={addTask}\r\n                                    changeTaskStatus={changeStatus}\r\n                                    filter={el.filter}\r\n                />)\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}