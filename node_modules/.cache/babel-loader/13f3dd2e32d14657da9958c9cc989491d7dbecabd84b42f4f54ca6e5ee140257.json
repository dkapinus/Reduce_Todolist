{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  _s();\n  const onclickHandler = nameButton => {\n    props.filtered(nameButton);\n  };\n  const onclickHandlerDelete = id => {\n    props.deleteTask(id);\n  };\n  let [inputValue, setInputValue] = useState('');\n  const onChangeHandler = event => {\n    setInputValue(event.currentTarget.value);\n  };\n  const addMessage = () => {\n    if (inputValue.trim() !== '') {\n      props.addMessage(inputValue.trim());\n    }\n    setInputValue('');\n  };\n  const onKeyDown = event => {\n    if (event.key === 'Enter') {\n      addMessage();\n    }\n  };\n  const onChangeCheck = (event, id) => {\n    props.InputCheck(event, id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      onChange: onChangeHandler,\n      onKeyDown: onKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMessage,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: event => onChangeCheck(event.currentTarget.checked, el.id),\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onclickHandlerDelete(el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onclickHandler('all'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onclickHandler('active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onclickHandler('completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"fNxyqMdOrVgwzU9I4cKuq4oRPjc=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","onclickHandler","nameButton","filtered","onclickHandlerDelete","id","deleteTask","inputValue","setInputValue","onChangeHandler","event","currentTarget","value","addMessage","trim","onKeyDown","key","onChangeCheck","InputCheck","title","task","map","el","checked","isDone"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent,KeyboardEvent, useState} from 'react';\nimport {FilterValuesType} from \"./App\";\n\ntype TodolistType = {\n    title:string;\n    task:Array<ArrayTodolistType>\n    filtered:(nameButton:FilterValuesType)=>void\n    deleteTask:(id:string)=>void\n    addMessage:(inputValue:string)=>void\n    InputCheck:(event:boolean,id:string)=>void\n}\n\ntype ArrayTodolistType = {\n    id:string;\n    title:string;\n    isDone:boolean;\n}\n\n\n\n\nexport const Todolist = (props:TodolistType) => {\n\n    const onclickHandler =(nameButton:FilterValuesType)=> {\n        props.filtered(nameButton)\n    }\n\n    const onclickHandlerDelete =(id:string)=> {\n       props.deleteTask(id)\n    }\n\n    let [inputValue,setInputValue]=useState('')\n\n\n    const onChangeHandler = (event:ChangeEvent<HTMLInputElement>)=> {\n       setInputValue(event.currentTarget.value)\n    }\n    const addMessage = ()=>{\n        if (inputValue.trim()!==''){props.addMessage(inputValue.trim())}\n        setInputValue('')\n\n    }\n    const onKeyDown = (event:KeyboardEvent<HTMLInputElement>)=> {\n     if (event.key==='Enter'){addMessage()}\n    }\n\n    const onChangeCheck = (event:boolean,id:string)=> {\n        props.InputCheck(event,id)\n    }\n    return (\n        <div>\n\n     <h3>{props.title}</h3>\n            <input value={inputValue} onChange={onChangeHandler} onKeyDown={onKeyDown}/>\n            <button onClick={addMessage}>Add</button>\n            <ul>\n                {props.task.map((el)=>{\n                    return (\n                        <li key={el.id}>\n                            {el.title}\n                            <input type={\"checkbox\"}  onChange={(event)=>onChangeCheck(event.currentTarget.checked,el.id)}  checked={el.isDone}/>\n                            <button onClick={()=>onclickHandlerDelete(el.id)}>X</button>\n                        </li>\n                    )\n                })}\n            </ul>\n            <button onClick={()=>onclickHandler('all')}>All</button>\n            <button onClick={()=>onclickHandler('active')}>Active</button>\n            <button onClick={()=>onclickHandler('completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA8BC,QAAQ,QAAO,OAAO;AAAC;AAqBjE,OAAO,MAAMC,QAAQ,GAAIC,KAAkB,IAAK;EAAA;EAE5C,MAAMC,cAAc,GAAGC,UAA2B,IAAI;IAClDF,KAAK,CAACG,QAAQ,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,MAAME,oBAAoB,GAAGC,EAAS,IAAI;IACvCL,KAAK,CAACM,UAAU,CAACD,EAAE,CAAC;EACvB,CAAC;EAED,IAAI,CAACE,UAAU,EAACC,aAAa,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAG3C,MAAMW,eAAe,GAAIC,KAAmC,IAAI;IAC7DF,aAAa,CAACE,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EAC3C,CAAC;EACD,MAAMC,UAAU,GAAG,MAAI;IACnB,IAAIN,UAAU,CAACO,IAAI,EAAE,KAAG,EAAE,EAAC;MAACd,KAAK,CAACa,UAAU,CAACN,UAAU,CAACO,IAAI,EAAE,CAAC;IAAA;IAC/DN,aAAa,CAAC,EAAE,CAAC;EAErB,CAAC;EACD,MAAMO,SAAS,GAAIL,KAAqC,IAAI;IAC3D,IAAIA,KAAK,CAACM,GAAG,KAAG,OAAO,EAAC;MAACH,UAAU,EAAE;IAAA;EACtC,CAAC;EAED,MAAMI,aAAa,GAAG,CAACP,KAAa,EAACL,EAAS,KAAI;IAC9CL,KAAK,CAACkB,UAAU,CAACR,KAAK,EAACL,EAAE,CAAC;EAC9B,CAAC;EACD,oBACI;IAAA,wBAEH;MAAA,UAAKL,KAAK,CAACmB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACf;MAAO,KAAK,EAAEZ,UAAW;MAAC,QAAQ,EAAEE,eAAgB;MAAC,SAAS,EAAEM;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5E;MAAQ,OAAO,EAAEF,UAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACzC;MAAA,UACKb,KAAK,CAACoB,IAAI,CAACC,GAAG,CAAEC,EAAE,IAAG;QAClB,oBACI;UAAA,WACKA,EAAE,CAACH,KAAK,eACT;YAAO,IAAI,EAAE,UAAW;YAAE,QAAQ,EAAGT,KAAK,IAAGO,aAAa,CAACP,KAAK,CAACC,aAAa,CAACY,OAAO,EAACD,EAAE,CAACjB,EAAE,CAAE;YAAE,OAAO,EAAEiB,EAAE,CAACE;UAAO;YAAA;YAAA;YAAA;UAAA,QAAE,eACrH;YAAQ,OAAO,EAAE,MAAIpB,oBAAoB,CAACkB,EAAE,CAACjB,EAAE,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW;QAAA,GAHvDiB,EAAE,CAACjB,EAAE;UAAA;UAAA;UAAA;QAAA,QAIT;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACL;MAAQ,OAAO,EAAE,MAAIJ,cAAc,CAAC,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACxD;MAAQ,OAAO,EAAE,MAAIA,cAAc,CAAC,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAC9D;MAAQ,OAAO,EAAE,MAAIA,cAAc,CAAC,WAAW,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QAClE;AAEd,CAAC;AAAC,GAlDWF,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}