{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  let {\n    title,\n    task,\n    FilterTask,\n    removeTask,\n    changeStatus,\n    ...props\n  } = _ref;\n  const onClickFilter = nameButton => {\n    FilterTask(nameButton);\n  };\n  const DeleteTask = taskId => {\n    removeTask(taskId);\n  };\n  const ChangeStatus = (id, e) => {\n    changeStatus(id, e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'checkbox',\n            onChange: e => ChangeStatus(el.id, e.currentTarget.checked),\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => DeleteTask(el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 27\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilter('all'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilter('active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilter('completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Todolist","title","task","FilterTask","removeTask","changeStatus","props","onClickFilter","nameButton","DeleteTask","taskId","ChangeStatus","id","e","map","el","currentTarget","checked","isDone"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent} from 'react';\nimport {FilterValuesType} from \"./App\";\n\ntype TaskTypeArray = {\n    id:string;\n    title:string;\n    isDone:boolean\n}\n\ntype TaskType = {\n    title:string\n    task:TaskTypeArray[]\n    FilterTask:(nameButton:FilterValuesType)=>void\n    removeTask:(taskId:string)=>void\n    changeStatus:(id:string,e:boolean)=>void\n}\n\n\n\nexport  const Todolist:React.FC<TaskType> = ({title,task,\n                                                 FilterTask,removeTask,changeStatus,...props}) => {\n\nconst onClickFilter= (nameButton:FilterValuesType)=>{\n    FilterTask(nameButton)\n}\n\nconst DeleteTask = (taskId:string)=> {\n    removeTask(taskId)\n}\n\n      const ChangeStatus = (id:string,e:boolean)=> {\n    changeStatus(id,e)\n      }\n\n    return (\n        <div>\n            <h3>{title}</h3>\n            <input/>\n            <button>Add</button>\n          <ul>\n              {task.map((el)=>{\n                  return (\n                      <li key={el.id}>\n                          {el.title}\n                          <input type={'checkbox'} onChange={(e:ChangeEvent<HTMLInputElement>)=>ChangeStatus(el.id,e.currentTarget.checked)} checked={el.isDone}/>\n                          <button onClick={()=>DeleteTask(el.id)}>X</button>\n                      </li>\n                  )\n              })}\n          </ul>\n            <button onClick={()=>onClickFilter('all')}>All</button>\n            <button onClick={()=>onClickFilter('active')}>Active</button>\n            <button onClick={()=>onClickFilter('completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AAAC;AAmBzC,OAAQ,MAAMC,QAA2B,GAAG,QACsD;EAAA,IADrD;IAACC,KAAK;IAACC,IAAI;IACPC,UAAU;IAACC,UAAU;IAACC,YAAY;IAAC,GAAGC;EAAK,CAAC;EAE7F,MAAMC,aAAa,GAAGC,UAA2B,IAAG;IAChDL,UAAU,CAACK,UAAU,CAAC;EAC1B,CAAC;EAED,MAAMC,UAAU,GAAIC,MAAa,IAAI;IACjCN,UAAU,CAACM,MAAM,CAAC;EACtB,CAAC;EAEK,MAAMC,YAAY,GAAG,CAACC,EAAS,EAACC,CAAS,KAAI;IAC/CR,YAAY,CAACO,EAAE,EAACC,CAAC,CAAC;EAChB,CAAC;EAEH,oBACI;IAAA,wBACI;MAAA,UAAKZ;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAA;MAAA;MAAA;IAAA,QAAQ,eACR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACtB;MAAA,UACKC,IAAI,CAACY,GAAG,CAAEC,EAAE,IAAG;QACZ,oBACI;UAAA,WACKA,EAAE,CAACd,KAAK,eACT;YAAO,IAAI,EAAE,UAAW;YAAC,QAAQ,EAAGY,CAA+B,IAAGF,YAAY,CAACI,EAAE,CAACH,EAAE,EAACC,CAAC,CAACG,aAAa,CAACC,OAAO,CAAE;YAAC,OAAO,EAAEF,EAAE,CAACG;UAAO;YAAA;YAAA;YAAA;UAAA,QAAE,eACxI;YAAQ,OAAO,EAAE,MAAIT,UAAU,CAACM,EAAE,CAACH,EAAE,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW;QAAA,GAH7CG,EAAE,CAACH,EAAE;UAAA;UAAA;UAAA;QAAA,QAIT;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACH;MAAQ,OAAO,EAAE,MAAIL,aAAa,CAAC,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eACvD;MAAQ,OAAO,EAAE,MAAIA,aAAa,CAAC,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAC7D;MAAQ,OAAO,EAAE,MAAIA,aAAa,CAAC,WAAW,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QACjE;AAEd,CAAC;AAAC,KApCYP,QAA2B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}