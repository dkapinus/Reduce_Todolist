{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { v1 } from 'uuid';\nimport { Todolist } from \"./Todolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  let [filter, setFilter] = useState('All');\n  const FilterNameButton = nameButton => {\n    setFilter(nameButton);\n  };\n  const FilteredTask = () => {\n    let newTask = tasks;\n    if (filter === 'Active') {\n      newTask = tasks.filter(el => el.isDone === false);\n    }\n    if (filter === 'Completed') {\n      newTask = tasks.filter(el => el.isDone === true);\n    }\n    return newTask;\n  };\n  const removeTask = id => {\n    let newTask = tasks.filter(el => el.id !== id);\n    setTasks(newTask);\n  };\n  const AddMessage = valueInput => {\n    let newTask = {\n      id: v1(),\n      title: valueInput,\n      isDone: true\n    };\n    setTasks([newTask, ...tasks]);\n  };\n  const CheckInput = (id, event) => {\n    return setTasks(tasks.filter(el => el.id === id ? {\n      ...el,\n      isDone: event\n    } : el));\n    console.log(setTasks(tasks.filter(el => el.id === id ? {\n      ...el,\n      isDone: event\n    } : el)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      name: 'What to learn',\n      task: FilteredTask(),\n      FilterNameButton: FilterNameButton,\n      removeTask: removeTask,\n      AddMessage: AddMessage,\n      filter: filter,\n      onChangeCheckInput: CheckInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"vt2ERTmmKJ0Zfab1Bz0TGyKEkq4=\");\n_c = App;\nexport default App;\n\n//-------------------------------------------------------------------------------------------------------\n//\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\n//\n// function App() {\n//\n//     let [tasks, setTasks] = useState([\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\n//         {id: v1(), title: \"JS\", isDone: true},\n//         {id: v1(), title: \"ReactJS\", isDone: false},\n//         {id: v1(), title: \"Rest API\", isDone: false},\n//         {id: v1(), title: \"GraphQL\", isDone: false},\n//     ]);\n//\n//     function removeTask(id: string) {\n//         let filteredTasks = tasks.filter(t => t.id != id);\n//         setTasks(filteredTasks);\n//     }\n//\n//     function addTask(title: string) {\n//         let task = {id: v1(), title: title, isDone: false};\n//         let newTasks = [task, ...tasks];\n//         setTasks(newTasks);\n//     }\n//\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\n//\n//     let tasksForTodolist = tasks;\n//\n//     if (filter === \"active\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\n//     }\n//     if (filter === \"completed\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\n//     }\n//\n//     function changeFilter(value: FilterValuesType) {\n//         setFilter(value);\n//     }\n//\n//\n//     return (\n//         <div className=\"App\">\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <input placeholder={'A lot of boring information'}/>\n//                     <div>\n//                         <button>Boring Button 1</button>\n//                         <button>Boring Button 2</button>\n//                         <button>Boring Button 3</button>\n//                     </div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}/>\n//         </div>\n//     );\n// }\n//\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","v1","Todolist","App","tasks","setTasks","id","title","isDone","filter","setFilter","FilterNameButton","nameButton","FilteredTask","newTask","el","removeTask","AddMessage","valueInput","CheckInput","event","console","log"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React,{useState} from 'react';\r\nimport './App.css';\r\nimport {v1} from 'uuid'\r\nimport {Todolist} from \"./Todolist\";\r\n\r\nexport type ButtonFilterType ='All'|'Active'|'Completed'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    let [tasks, setTasks] = useState([\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ])\r\n\r\n   let [filter,setFilter]=useState<ButtonFilterType>('All')\r\n\r\n         const FilterNameButton = (nameButton:ButtonFilterType)=> {\r\n        setFilter(nameButton)\r\n        }\r\n\r\n    const FilteredTask=()=> {\r\n        let newTask=tasks\r\n        if(filter==='Active'){newTask=tasks.filter((el)=>el.isDone===false)}\r\n        if(filter==='Completed'){newTask=tasks.filter((el)=>el.isDone===true)}\r\n        return newTask\r\n    }\r\n\r\n    const removeTask = (id:string)=> {\r\n\r\n        let newTask=tasks.filter((el)=>el.id !==id)\r\n        setTasks(newTask)\r\n    }\r\n    const AddMessage =(valueInput:string)=> {\r\n        let newTask ={id: v1(), title: valueInput, isDone: true}\r\n        setTasks([newTask,...tasks])\r\n    }\r\n\r\n\r\n    const CheckInput=(id:string,event:boolean)=> {\r\n\r\n        return    setTasks(tasks.filter((el)=>el.id===id ? {...el,isDone:event}:el))\r\nconsole.log(setTasks(tasks.filter((el)=>el.id===id ? {...el,isDone:event}:el)))\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n          <Todolist\r\n\r\n                    name={'What to learn'}\r\n                    task={FilteredTask()}\r\n                    FilterNameButton={FilterNameButton}\r\n                    removeTask={removeTask}\r\n                    AddMessage={AddMessage}\r\n                    filter={filter}\r\n                    onChangeCheckInput={CheckInput}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------------------------------------------\r\n//\r\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n//\r\n// function App() {\r\n//\r\n//     let [tasks, setTasks] = useState([\r\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n//         {id: v1(), title: \"JS\", isDone: true},\r\n//         {id: v1(), title: \"ReactJS\", isDone: false},\r\n//         {id: v1(), title: \"Rest API\", isDone: false},\r\n//         {id: v1(), title: \"GraphQL\", isDone: false},\r\n//     ]);\r\n//\r\n//     function removeTask(id: string) {\r\n//         let filteredTasks = tasks.filter(t => t.id != id);\r\n//         setTasks(filteredTasks);\r\n//     }\r\n//\r\n//     function addTask(title: string) {\r\n//         let task = {id: v1(), title: title, isDone: false};\r\n//         let newTasks = [task, ...tasks];\r\n//         setTasks(newTasks);\r\n//     }\r\n//\r\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n//\r\n//     let tasksForTodolist = tasks;\r\n//\r\n//     if (filter === \"active\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n//     }\r\n//     if (filter === \"completed\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n//     }\r\n//\r\n//     function changeFilter(value: FilterValuesType) {\r\n//         setFilter(value);\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <input placeholder={'A lot of boring information'}/>\r\n//                     <div>\r\n//                         <button>Boring Button 1</button>\r\n//                         <button>Boring Button 2</button>\r\n//                         <button>Boring Button 3</button>\r\n//                     </div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}/>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}