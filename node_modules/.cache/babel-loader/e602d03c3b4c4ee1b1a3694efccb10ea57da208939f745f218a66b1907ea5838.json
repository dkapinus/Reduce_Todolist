{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './Todolist.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  _s();\n  let {\n    name,\n    FilterNameButton,\n    removeTask,\n    AddMessage,\n    task,\n    ...props\n  } = _ref;\n  const onClickHandler = nameButton => {\n    FilterNameButton(nameButton);\n  };\n  const onClickHandlerDeleteTask = id => {\n    removeTask(id);\n  };\n  let [valueInput, setValueInput] = useState('');\n  const onChangeInputHandler = event => {\n    setValueInput(event.currentTarget.value);\n  };\n  let [error, setError] = useState('');\n  const onclickHandlerAddMessage = () => {\n    if (valueInput.trim() !== '') {\n      AddMessage(valueInput.trim());\n    } else setError('Title is reqiured');\n    setValueInput('');\n  };\n  const onKeyDownInput = event => {\n    if (event.key === 'Enter') {\n      onclickHandlerAddMessage();\n    }\n  };\n  const onKeyPressInput = event => {\n    if (event.key === '13') {\n      onclickHandlerAddMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: error ? s.errorInput : '',\n      onChange: onChangeInputHandler,\n      value: valueInput,\n      onKeyDown: onKeyDownInput,\n      onKeyPress: onKeyPressInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onclickHandlerAddMessage,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.errorMessage,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onClickHandlerDeleteTask(el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 26\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickHandler('All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickHandler('Active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickHandler('Completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"geukEC1keZR/OauyzKwWYY5rmvc=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","s","Todolist","name","FilterNameButton","removeTask","AddMessage","task","props","onClickHandler","nameButton","onClickHandlerDeleteTask","id","valueInput","setValueInput","onChangeInputHandler","event","currentTarget","value","error","setError","onclickHandlerAddMessage","trim","onKeyDownInput","key","onKeyPressInput","errorInput","errorMessage","map","el","title","isDone"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent,KeyboardEvent, useState} from 'react';\nimport {ButtonFilterType} from \"./App\";\nimport s from './Todolist.module.css'\n\ntype  TodolistType = {\n    name:string\n    FilterNameButton:(nameButton:ButtonFilterType)=>void\n    removeTask:(id:string)=>void\n    AddMessage:(valueInput:string)=>void\n    task:TaskType[]\n}\n\ntype TaskType = {\n       id:string,\n       title:string,\n       isDone:boolean\n}\n\nexport const Todolist:React.FC<TodolistType> = ({\n                                                    name,\n                                                    FilterNameButton,\n                                                    removeTask,\n                                                    AddMessage,\n                                                    task,\n                                                    ...props\n                                                }) => {\n    const onClickHandler = (nameButton:ButtonFilterType)=> {\n        FilterNameButton(nameButton)\n    }\n\n    const  onClickHandlerDeleteTask= (id:string)=> {\n        removeTask(id)\n    }\n\n    let [valueInput,setValueInput]=useState('')\n\n    const onChangeInputHandler = (event:ChangeEvent<HTMLInputElement>)=> {\n     setValueInput(event.currentTarget.value)\n    }\n\n    let [error,setError]=useState<string|null>('')\n\n    const onclickHandlerAddMessage = ()=> {\n        if(valueInput.trim()!==''){AddMessage(valueInput.trim())}\n        else (setError('Title is reqiured'))\n\n        setValueInput('')\n       \n    }\n\n    const onKeyDownInput = (event:KeyboardEvent<HTMLInputElement>)=> {\n        if(event.key==='Enter'){onclickHandlerAddMessage()}\n    }\n\n    const onKeyPressInput = (event:KeyboardEvent<HTMLInputElement>)=> {\n        if(event.key==='13'){onclickHandlerAddMessage()}\n    }\n    return (\n        <div>\n            <h3>{name}</h3>\n            <input  className={error ? s.errorInput :''} onChange={onChangeInputHandler} value={valueInput} onKeyDown={onKeyDownInput} onKeyPress={onKeyPressInput}/>\n            <button onClick={onclickHandlerAddMessage}>Add</button>\n            {error &&<div className={s.errorMessage}>{error}</div>}\n            <ul>{task.map((el)=>{\n                return ( <li key={el.id}>\n                    {el.title}\n                    <input type={\"checkbox\"} checked={el.isDone}  />\n                    <button onClick={()=>onClickHandlerDeleteTask(el.id)}>X</button>\n                </li>)\n            })}\n\n            </ul>\n               <button onClick={()=>onClickHandler('All')}>All</button>\n               <button onClick={()=>onClickHandler('Active')}>Active</button>\n               <button onClick={()=>onClickHandler('Completed')}>Completed</button>\n\n        </div>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}