{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  function removeTask(id) {\n    let filteredTasks = tasks.filter(t => t.id !== id);\n    setTasks(filteredTasks);\n  }\n  let [filter, setFilter] = useState(\"all\");\n  function changeFilter(value) {\n    setFilter(value);\n  }\n  const ForTodolist = () => {\n    let tasksForTodolist = tasks;\n    if (filter === \"active\") {\n      tasksForTodolist = tasks.filter(t => t.isDone === false);\n    }\n    if (filter === \"completed\") {\n      tasksForTodolist = tasks.filter(t => t.isDone === true);\n    }\n    return tasksForTodolist;\n  };\n  const callback = valueInput => {\n    setTasks([{\n      id: v1(),\n      title: valueInput,\n      isDone: true\n    }, ...tasks]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: \"What to learn\",\n      tasks: ForTodolist(),\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      callback: callback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Bnle718jrbwycNiQcPnEsHbz2nw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","tasks","setTasks","id","title","isDone","removeTask","filteredTasks","filter","t","setFilter","changeFilter","value","ForTodolist","tasksForTodolist","callback","valueInput"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {v1} from \"uuid\";\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    let [tasks, setTasks] = useState([\r\n        { id: v1(), title: \"HTML&CSS\", isDone: true },\r\n        { id: v1(), title: \"JS\", isDone: true },\r\n        { id: v1(), title: \"ReactJS\", isDone: false },\r\n        { id: v1(), title: \"Rest API\", isDone: false },\r\n        { id: v1(), title: \"GraphQL\", isDone: false },\r\n    ]);\r\n\r\n    function removeTask(id:string) {\r\n        let filteredTasks = tasks.filter(t => t.id !== id);\r\n        setTasks(filteredTasks);\r\n    }\r\n\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n\r\n    const ForTodolist = ()=> {\r\n        let tasksForTodolist = tasks;\r\n\r\n        if (filter === \"active\") {\r\n            tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n        }\r\n        if (filter === \"completed\") {\r\n            tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n        }\r\n        return tasksForTodolist\r\n    }\r\n\r\n\r\n      const callback =(valueInput:string)=> {\r\nsetTasks([{ id: v1(), title: valueInput, isDone: true },...tasks])\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title=\"What to learn\"\r\n                      tasks={ForTodolist()}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n                      callback={callback}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAClB,SAAQC,QAAQ,QAAO,YAAY;AACnC,SAAQC,EAAE,QAAO,MAAM;AAAC;AAOxB,SAASC,GAAG,GAAG;EAAA;EAEX,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAC7B;IAAEM,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC7C;IAAEF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC,EACvC;IAAEF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC7C;IAAEF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC9C;IAAEF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC,CAChD,CAAC;EAEF,SAASC,UAAU,CAACH,EAAS,EAAE;IAC3B,IAAII,aAAa,GAAGN,KAAK,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,KAAKA,EAAE,CAAC;IAClDD,QAAQ,CAACK,aAAa,CAAC;EAC3B;EAEA,IAAI,CAACC,MAAM,EAAEE,SAAS,CAAC,GAAGb,QAAQ,CAAmB,KAAK,CAAC;EAE3D,SAASc,YAAY,CAACC,KAAuB,EAAE;IAC3CF,SAAS,CAACE,KAAK,CAAC;EACpB;EAEA,MAAMC,WAAW,GAAG,MAAK;IACrB,IAAIC,gBAAgB,GAAGb,KAAK;IAE5B,IAAIO,MAAM,KAAK,QAAQ,EAAE;MACrBM,gBAAgB,GAAGb,KAAK,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,MAAM,KAAK,KAAK,CAAC;IAC5D;IACA,IAAIG,MAAM,KAAK,WAAW,EAAE;MACxBM,gBAAgB,GAAGb,KAAK,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,MAAM,KAAK,IAAI,CAAC;IAC3D;IACA,OAAOS,gBAAgB;EAC3B,CAAC;EAGC,MAAMC,QAAQ,GAAGC,UAAiB,IAAI;IAC5Cd,QAAQ,CAAC,CAAC;MAAEC,EAAE,EAAEJ,EAAE,EAAE;MAAEK,KAAK,EAAEY,UAAU;MAAEX,MAAM,EAAE;IAAK,CAAC,EAAC,GAAGJ,KAAK,CAAC,CAAC;EAC9D,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB,QAAC,QAAQ;MAAC,KAAK,EAAC,eAAe;MACrB,KAAK,EAAEY,WAAW,EAAG;MACrB,UAAU,EAAEP,UAAW;MACvB,YAAY,EAAEK,YAAa;MAC3B,QAAQ,EAAEI;IAAS;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAE7B;AAEd;AAAC,GAhDQf,GAAG;AAAA,KAAHA,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}