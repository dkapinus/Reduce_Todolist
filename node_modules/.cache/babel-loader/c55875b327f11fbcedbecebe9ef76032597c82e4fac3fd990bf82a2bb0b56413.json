{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todolist(props) {\n  _s();\n  let [title, setTitle] = useState(\"\");\n  const addTask = () => {\n    props.addTask(title);\n    setTitle(\"\");\n  };\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n  const onKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      addTask();\n    }\n  };\n  let [check, setCheck] = useState(false);\n  let [id, idSet] = useState('');\n  const onAllClickHandler = () => props.changeFilter(\"all\");\n  const onActiveClickHandler = () => props.changeFilter(\"active\");\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: onChangeHandler,\n        onKeyPress: onKeyPressHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => {\n        const onChangeHandlerCheck = event => {\n          setCheck(event.currentTarget.checked);\n        };\n        const onClickHandler = () => props.removeTask(t.id);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: onChangeHandlerCheck,\n            checked: check,\n            type: 'checkbox'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClickHandler,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAllClickHandler,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onActiveClickHandler,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCompletedClickHandler,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n}\n_s(Todolist, \"swjlAoAHyhMgqiiiGoQNgcsEawM=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","title","setTitle","addTask","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","check","setCheck","id","idSet","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasks","map","t","onChangeHandlerCheck","event","checked","onClickHandler","removeTask"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {FilterValuesType} from './App';\r\n\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string) => void\r\n    changeFilter: (value: FilterValuesType) => void\r\n    addTask: (title: string) => void\r\n}\r\n\r\ntype TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n\r\n    const addTask = () => {\r\n        props.addTask(title);\r\n        setTitle(\"\");\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addTask();\r\n        }\r\n    }\r\n\r\n    let [check,setCheck]= useState(false)\r\n\r\n\r\n    let [id,idSet] =useState('')\r\n\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\");\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\");\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\");\r\n\r\n    return <div>\r\n        <h3>{props.title}</h3>\r\n        <div>\r\n            <input value={title}\r\n                   onChange={ onChangeHandler }\r\n                   onKeyPress={ onKeyPressHandler }\r\n            />\r\n            <button onClick={addTask}>+</button>\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n\r\n\r\n\r\n                    const  onChangeHandlerCheck = (event:ChangeEvent<HTMLInputElement>)=> {\r\n                        setCheck(event.currentTarget.checked)\r\n                     \r\n\r\n                    }\r\n\r\n                    const onClickHandler = () => props.removeTask(t.id)\r\n\r\n                    return <li key={t.id}>\r\n                        <input onChange={ onChangeHandlerCheck }  checked={check} type={'checkbox'}/>\r\n                        <span>{t.title}</span>\r\n                        <button onClick={ onClickHandler }>x</button>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n        <div>\r\n            <button onClick={ onAllClickHandler }>All</button>\r\n            <button onClick={ onActiveClickHandler }>Active</button>\r\n            <button onClick={ onCompletedClickHandler }>Completed</button>\r\n        </div>\r\n    </div>\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA+BC,QAAQ,QAAO,OAAO;AAAC;AAkBlE,OAAO,SAASC,QAAQ,CAACC,KAAgB,EAAE;EAAA;EAEvC,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMK,OAAO,GAAG,MAAM;IAClBH,KAAK,CAACG,OAAO,CAACF,KAAK,CAAC;IACpBC,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAME,eAAe,GAAIC,CAAgC,IAAK;IAC1DH,QAAQ,CAACG,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,iBAAiB,GAAIH,CAAkC,IAAK;IAC9D,IAAIA,CAAC,CAACI,QAAQ,KAAK,EAAE,EAAE;MACnBN,OAAO,EAAE;IACb;EACJ,CAAC;EAED,IAAI,CAACO,KAAK,EAACC,QAAQ,CAAC,GAAEb,QAAQ,CAAC,KAAK,CAAC;EAGrC,IAAI,CAACc,EAAE,EAACC,KAAK,CAAC,GAAEf,QAAQ,CAAC,EAAE,CAAC;EAG5B,MAAMgB,iBAAiB,GAAG,MAAMd,KAAK,CAACe,YAAY,CAAC,KAAK,CAAC;EACzD,MAAMC,oBAAoB,GAAG,MAAMhB,KAAK,CAACe,YAAY,CAAC,QAAQ,CAAC;EAC/D,MAAME,uBAAuB,GAAG,MAAMjB,KAAK,CAACe,YAAY,CAAC,WAAW,CAAC;EAErE,oBAAO;IAAA,wBACH;MAAA,UAAKf,KAAK,CAACC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,wBACI;QAAO,KAAK,EAAEA,KAAM;QACb,QAAQ,EAAGG,eAAiB;QAC5B,UAAU,EAAGI;MAAmB;QAAA;QAAA;QAAA;MAAA,QACrC,eACF;QAAQ,OAAO,EAAEL,OAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC,eACN;MAAA,UAEQH,KAAK,CAACkB,KAAK,CAACC,GAAG,CAACC,CAAC,IAAI;QAIjB,MAAOC,oBAAoB,GAAIC,KAAmC,IAAI;UAClEX,QAAQ,CAACW,KAAK,CAAChB,aAAa,CAACiB,OAAO,CAAC;QAGzC,CAAC;QAED,MAAMC,cAAc,GAAG,MAAMxB,KAAK,CAACyB,UAAU,CAACL,CAAC,CAACR,EAAE,CAAC;QAEnD,oBAAO;UAAA,wBACH;YAAO,QAAQ,EAAGS,oBAAsB;YAAE,OAAO,EAAEX,KAAM;YAAC,IAAI,EAAE;UAAW;YAAA;YAAA;YAAA;UAAA,QAAE,eAC7E;YAAA,UAAOU,CAAC,CAACnB;UAAK;YAAA;YAAA;YAAA;UAAA,QAAQ,eACtB;YAAQ,OAAO,EAAGuB,cAAgB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW;QAAA,GAHjCJ,CAAC,CAACR,EAAE;UAAA;UAAA;UAAA;QAAA,QAIf;MACT,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL,eACL;MAAA,wBACI;QAAQ,OAAO,EAAGE,iBAAmB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eAClD;QAAQ,OAAO,EAAGE,oBAAsB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACxD;QAAQ,OAAO,EAAGC,uBAAyB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AACV;AAAC,GAlEelB,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}