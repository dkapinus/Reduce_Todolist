{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from \"./Todolist.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  _s();\n  let {\n    todolistID,\n    task,\n    title,\n    removeTask,\n    filteredTask,\n    AddMessage,\n    changeStatus,\n    Filter,\n    ...props\n  } = _ref;\n  const onClickHandlerRemoveTask = (todolistID, taskId) => {\n    removeTask(todolistID, taskId);\n  };\n  const onclickFilter = (todolistID, nameButton) => {\n    filteredTask(todolistID, nameButton);\n  };\n  const [value, SetValue] = useState('');\n  const onChangeInput = e => {\n    SetValue(e.currentTarget.value);\n    SetError('');\n  };\n  const [error, SetError] = useState('');\n  const onClickHandlerAddMessage = todolistID => {\n    if (value.trim() !== '') {\n      AddMessage(todolistID, value.trim());\n    } else SetError('Title is requiet');\n    SetValue('');\n  };\n  const onKeyDown = event => {\n    if (event.key === 'Enter') {\n      onClickHandlerAddMessage(todolistID);\n    }\n  };\n  const onclickHandlerStatusInput = (todolistID, id, e) => {\n    changeStatus(todolistID, id, e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: error ? s.error_message : '',\n      onChange: onChangeInput,\n      value: value,\n      onKeyDown: onKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickHandlerAddMessage(todolistID),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: el.isDone ? s.Completed : '',\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => onclickHandlerStatusInput(todolistID, el.id, e.currentTarget.checked),\n            type: \"checkbox\",\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onClickHandlerRemoveTask(todolistID, el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 20\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: Filter === 'All' ? s.active : '',\n      onClick: () => onclickFilter(todolistID, 'All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: Filter === 'Active' ? s.active : '',\n      onClick: () => onclickFilter(todolistID, 'Active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: Filter === 'Completed' ? s.active : '',\n      onClick: () => onclickFilter(todolistID, 'Completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"bHkZ0pJ5hKjz7xoNruj9M2vw+zg=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","s","Todolist","todolistID","task","title","removeTask","filteredTask","AddMessage","changeStatus","Filter","props","onClickHandlerRemoveTask","taskId","onclickFilter","nameButton","value","SetValue","onChangeInput","e","currentTarget","SetError","error","onClickHandlerAddMessage","trim","onKeyDown","event","key","onclickHandlerStatusInput","id","error_message","map","el","isDone","Completed","checked","active"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent,KeyboardEvent, useState} from 'react';\nimport {FilterValueType} from \"./App\";\nimport s from  \"./Todolist.module.css\"\n\ntype TodolistType = {\n    todolistID:string\n    title:string;\n    task:TaskType[]\n    removeTask:(todolistID:string,taskId:string)=>void\n    filteredTask:(todolistID:string,nameButton:FilterValueType)=>void\n    AddMessage:(todolistID:string,value:string)=>void\n    changeStatus:(todolistID:string,id:string,e:boolean)=>void\n    Filter:FilterValueType\n}\n\n export  type TaskType= {\n    id:string;\n    title:string;\n    isDone:boolean\n}\n\n\n\n\n\n\nexport  const Todolist:React.FC<TodolistType> = ({ todolistID,task,\n                                                     title,\n                                                     removeTask,filteredTask,\n                                                     AddMessage, changeStatus,\n                                                     Filter,...props}) => {\n\n\n    const onClickHandlerRemoveTask = (todolistID:string,taskId:string)=> {\n        removeTask(todolistID,taskId)\n    }\n\n    const onclickFilter = (todolistID:string,nameButton:FilterValueType)=> {\n       filteredTask(todolistID,nameButton)\n  }\n\n  const [value,SetValue]=useState('')\n\n  const onChangeInput = (e:ChangeEvent<HTMLInputElement>)=> {\n        SetValue(e.currentTarget.value)\n        SetError('')\n  }\n\n  const [error,SetError]=useState('')\n\n  const onClickHandlerAddMessage = (todolistID:string)=> {\n        if(value.trim()!==''){AddMessage(todolistID,value.trim()) }\n        else (SetError('Title is requiet'))\n      SetValue('')\n\n\n\n  }\n\n\n  const onKeyDown = (event:KeyboardEvent<HTMLInputElement>)=> {\n        if(event.key==='Enter'){onClickHandlerAddMessage(todolistID)}\n\n  }\n\n     const onclickHandlerStatusInput = (todolistID:string,id:string,e:boolean)=> {\n       changeStatus(todolistID,id,e)\n}\n    return (\n        <div>\n            <h3>{title}</h3>\n            <input className={error ? s.error_message : ''} onChange={onChangeInput} value={value} onKeyDown={onKeyDown}/>\n            <button onClick={()=>onClickHandlerAddMessage(todolistID)}>Add</button>\n            {error && <div  className={s.error}>{error}</div>}\n           <ul>{task.map((el)=>{\n               return( <li key={el.id}  className={el.isDone ? s.Completed : ''}>\n                   {el.title}\n                   <input  onChange={(e)=>onclickHandlerStatusInput(todolistID,el.id,e.currentTarget.checked)} type={\"checkbox\"} checked={el.isDone}/>\n                   <button onClick={()=>onClickHandlerRemoveTask(todolistID,el.id)}>X</button>\n               </li>)\n               })\n\n           }\n\n           </ul>\n\n            <button  className={Filter==='All' ? s.active: ''} onClick={()=>onclickFilter(todolistID,'All')}>All</button>\n            <button className={Filter==='Active' ? s.active: ''} onClick={()=>onclickFilter(todolistID,'Active')}>Active</button>\n            <button className={Filter==='Completed' ? s.active: ''} onClick={()=>onclickFilter(todolistID,'Completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}