{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\";\nimport React from 'react';\nimport s from './Todolist.module.css';\nimport { Input } from \"./Components/Input\";\nimport { EditableSpan } from \"./Components/EditableSpan\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = _ref => {\n  let {\n    id,\n    title,\n    task,\n    FilterTask,\n    removeTask,\n    changeStatus,\n    addMessage,\n    filter,\n    deleteTodolist,\n    changeSpan,\n    changeSpanTodolist,\n    ...props\n  } = _ref;\n  const onClickFilter = nameButton => {\n    FilterTask(id, nameButton);\n  };\n  const ChangeStatus = (taskId, e) => {\n    changeStatus(id, taskId, e);\n  };\n  const AddNameTitle = valueInput => {\n    addMessage(id, valueInput);\n  };\n  const DeleteTodolist = () => {\n    deleteTodolist(id);\n  };\n  const DeleteTask = taskId => {\n    removeTask(id, taskId);\n  };\n  const ChangeSpanTodolist = e => {\n    changeSpanTodolist(id, e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(EditableSpan, {\n        title: title,\n        ChangeSpan: ChangeSpanTodolist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: DeleteTodolist,\n        children: \"DeleteTODOLIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      addMessage: AddNameTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: task.map(el => {\n        const ChangeSpan = e => {\n          changeSpan(id, el.id, e);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(EditableSpan, {\n            title: el.title,\n            ChangeSpan: ChangeSpan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: el.isDone ? s.active_task : '',\n            type: 'checkbox',\n            onChange: e => ChangeStatus(el.id, e.currentTarget.checked),\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => DeleteTask(el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: filter === 'all' ? s.active_Button : '',\n      onClick: () => onClickFilter('all'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: filter === 'active' ? s.active_Button : '',\n      onClick: () => onClickFilter('active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: filter === 'completed' ? s.active_Button : '',\n      onClick: () => onClickFilter('completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","s","Input","EditableSpan","Todolist","id","title","task","FilterTask","removeTask","changeStatus","addMessage","filter","deleteTodolist","changeSpan","changeSpanTodolist","props","onClickFilter","nameButton","ChangeStatus","taskId","e","AddNameTitle","valueInput","DeleteTodolist","DeleteTask","ChangeSpanTodolist","map","el","ChangeSpan","isDone","active_task","currentTarget","checked","active_Button"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent} from 'react';\nimport {FilterValuesType} from \"./App\";\nimport s from './Todolist.module.css'\nimport {Input} from \"./Components/Input\";\nimport {EditableSpan} from \"./Components/EditableSpan\";\n\n\nexport type TaskTypeArray = {\n    id:string;\n    title:string;\n    isDone:boolean\n}\n\ntype TaskType = {\n    id:string\n    title:string\n    task:TaskTypeArray[]\n    FilterTask:(todolistId:string,nameButton:FilterValuesType)=>void\n    removeTask:(todolistId:string,taskId:string)=>void\n    changeStatus:(todolistId:string,id:string,e:boolean)=>void\n    addMessage:(todolistId:string,valueInput:string)=>void\n    filter:FilterValuesType\n    deleteTodolist:(todolistId:string)=>void\n    changeSpan:(todolistId:string,id:string,e:string)=>void\n    changeSpanTodolist:(todolistId:string,e:string)=>void\n}\n\n\n\nexport  const Todolist:React.FC<TaskType> = ({id,title,task,\n                                                 FilterTask,removeTask,changeStatus,addMessage,filter, deleteTodolist,changeSpan,changeSpanTodolist,...props}) => {\n\nconst onClickFilter= (nameButton:FilterValuesType)=>{\n    FilterTask(id,nameButton)\n}\n\n\n\n    const ChangeStatus = (taskId:string,e:boolean)=> {\n        changeStatus(id,taskId,e)\n\n    }\n        const AddNameTitle = (valueInput:string)=> {\n            addMessage(id,valueInput)\n       }\n\n\n      const DeleteTodolist = ()=> {\n    deleteTodolist(id)\n      }\n\n    const DeleteTask = (taskId:string)=> {\n        removeTask(id,taskId)\n    }\n    const ChangeSpanTodolist = (e:string)=>{\n        changeSpanTodolist(id,e)\n    }\n\n    return (\n        <div>\n            <h3><EditableSpan title={title} ChangeSpan={ChangeSpanTodolist}/>\n                <button onClick={DeleteTodolist}>DeleteTODOLIST</button>\n            </h3>\n          <Input addMessage={AddNameTitle}/>\n\n            <ul>\n                {task.map((el)=>{\n                    const ChangeSpan=(e:string)=> {\n                        changeSpan(id,el.id,e)\n                    }\n                    return (\n                        <li key={el.id}>\n                            <EditableSpan title={el.title} ChangeSpan={ChangeSpan}/>\n                            <input className={el.isDone ? s.active_task :''} type={'checkbox'} onChange={(e:ChangeEvent<HTMLInputElement>)=>ChangeStatus(el.id,e.currentTarget.checked)} checked={el.isDone}/>\n                            <button onClick={()=>DeleteTask(el.id)}>X</button>\n                        </li>\n                    )\n                })}\n            </ul>\n            <button className={filter==='all'? s.active_Button:''} onClick={()=>onClickFilter('all')}>All</button>\n            <button className={filter==='active'? s.active_Button:''} onClick={()=>onClickFilter('active')}>Active</button>\n            <button className={filter==='completed'? s.active_Button:''} onClick={()=>onClickFilter('completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}