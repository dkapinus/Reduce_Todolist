{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from \"./Todolist\";\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todoListsID1 = v1();\n  let todoListsID2 = v1();\n  let [todoLists, SetTodoLists] = useState([{\n    id: todoListsID1,\n    title: \"Whats to learn\",\n    filter: \"all\"\n  }, {\n    id: todoListsID2,\n    title: \"Whats to buy\",\n    filter: \"all\"\n  }]);\n  let [tasks, setTasks] = useState({\n    [todoListsID1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todoListsID2]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }]\n  });\n  let [filter, setFilter] = useState('all');\n  const FilterTask = nameButton => {\n    setFilter(nameButton);\n  };\n  const removeTask = taskId => {\n\n    // setTask(tasks.filter((el)=>el.id!==taskId))\n  };\n  const changeStatus = (id, isDone) => {\n    // setTask(tasks.map((el)=>el.id===id ? {...el,isDone: isDone}: el))\n  };\n  const addMessage = valueInput => {\n    // let newTask= { id: v1(), title: valueInput, isDone: true }\n    //    setTask([newTask,...tasks])\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todoLists.map(el => {\n      const FilteredTask = () => {\n        let newArrayTask = tasks[el.id];\n        if (el.filter === 'active') {\n          newArrayTask = tasks[el.id].filter(el => el.isDone === false);\n        }\n        if (el.filter === 'completed') {\n          newArrayTask = tasks[el.id].filter(el => el.isDone === true);\n        }\n        return newArrayTask;\n      };\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        title: el.title,\n        task: FilteredTask(),\n        FilterTask: FilterTask,\n        removeTask: removeTask,\n        changeStatus: changeStatus,\n        addMessage: addMessage,\n        filter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"k6zg7FOCeSwRNiFU9EJqAOvSlus=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","todoListsID1","todoListsID2","todoLists","SetTodoLists","id","title","filter","tasks","setTasks","isDone","setFilter","FilterTask","nameButton","removeTask","taskId","changeStatus","addMessage","valueInput","map","el","FilteredTask","newArrayTask"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from \"./Todolist\";\r\nimport {v1} from 'uuid'\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\n\r\ntype TodoListsType = {\r\n    id:string;\r\n    title:string;\r\n    filter:FilterValuesType;\r\n}\r\n\r\nfunction App() {\r\n\r\n    let todoListsID1=v1()\r\n    let todoListsID2=v1()\r\n\r\n    let [todoLists, SetTodoLists] = useState<TodoListsType[]>([\r\n        {id: todoListsID1, title: \"Whats to learn\", filter: \"all\"},\r\n        {id: todoListsID2, title: \"Whats to buy\", filter: \"all\"},\r\n\r\n    ])\r\n\r\n\r\n    let [tasks, setTasks] = useState({\r\n        [todoListsID1]:[\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],\r\n        [todoListsID2]:[\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n    ]\r\n    });\r\n\r\n   let[filter,setFilter] =useState<FilterValuesType>('all')\r\n\r\n\r\n      const FilterTask = (nameButton:FilterValuesType)=> {\r\n        setFilter(nameButton)\r\n       }\r\n\r\n\r\n\r\n       const removeTask=(taskId:string)=>{\r\n\r\n        // setTask(tasks.filter((el)=>el.id!==taskId))\r\n       }\r\n\r\n       const  changeStatus=(id:string,isDone:boolean)=>{\r\n      // setTask(tasks.map((el)=>el.id===id ? {...el,isDone: isDone}: el))\r\n       }\r\n\r\n       const addMessage=(valueInput:string)=>{\r\n        // let newTask= { id: v1(), title: valueInput, isDone: true }\r\n        //    setTask([newTask,...tasks])\r\n       }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {todoLists.map((el)=>{\r\n                const FilteredTask = ()=> {\r\n                    let newArrayTask=tasks[el.id]\r\n                    if (el.filter==='active'){newArrayTask=tasks[el.id].filter((el)=>el.isDone===false)}\r\n                    if (el.filter==='completed'){newArrayTask=tasks[el.id].filter((el)=>el.isDone===true)}\r\n                    return newArrayTask\r\n                }\r\n                return (\r\n                    <Todolist\r\n                        title={el.title}\r\n                        task={FilteredTask()}\r\n                        FilterTask={FilterTask}\r\n                        removeTask={removeTask}\r\n                        changeStatus={changeStatus}\r\n                        addMessage={addMessage}\r\n                        filter={filter}\r\n                    />\r\n                )\r\n            })}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}