{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\n// import {useState} from \"react\";\n// import {v1} from \"uuid\";\n//\n// let [todolist,setTodolist]=useState<TodolistType[]>([\n//     {id:v1(),title:'What to learn',filter:'all'},\n//     {id:v1(),title: 'What to buy',filter:'all'},\n// ])\n//\n// let todolistId1 = v1();\n// let todolistId2 = v1();\n//\n\n//\n// let [tasks, setTasks] = useState({\n//     [todolistId1]: [\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\n//         {id: v1(), title: \"JS\", isDone: true},\n//         {id: v1(), title: \"ReactJS\", isDone: false},\n//         {id: v1(), title: \"Rest API\", isDone: false},\n//         {id: v1(), title: \"GraphQL\", isDone: false},\n//     ],\n//     [todolistId2]: [\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\n//         {id: v1(), title: \"JS\", isDone: true},\n//         {id: v1(), title: \"ReactJS\", isDone: false},\n//         {id: v1(), title: \"Rest API\", isDone: false},\n//         {id: v1(), title: \"GraphQL\", isDone: false},\n//     ]\n// });\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { v1 } from 'uuid';\nimport { Todolist } from \"./Todolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  let [todolists, setTodolists] = useState([{\n    id: v1(),\n    title: \"What to learn\",\n    filter: \"All\"\n  }, {\n    id: v1(),\n    title: \"What to buy\",\n    filter: \"All\"\n  }]);\n  const removeTask = id => {\n    let newTask = tasks.filter(el => el.id != id);\n    setTasks(newTask);\n  };\n  let [nameButton, setNameButton] = useState('All');\n  const ChangeFilter = nameButton => {\n    setNameButton(nameButton);\n  };\n  const Filtered = () => {\n    let filteredTask = tasks;\n    if (nameButton === 'Active') {\n      filteredTask = tasks.filter(el => el.isDone === false);\n    }\n    if (nameButton === 'Completed') {\n      filteredTask = tasks.filter(el => el.isDone === true);\n    }\n    return filteredTask;\n  };\n  const AddMessage = inputValue => {\n    let newTask = {\n      id: v1(),\n      title: inputValue,\n      isDone: true\n    };\n    setTasks([newTask, ...tasks]);\n  };\n  const InputCheck = (event, id) => {\n    setTasks(tasks.map(el => el.id === id ? {\n      ...el,\n      isDone: event\n    } : el));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolists.map(el => {\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        task: Filtered(),\n        name: el.title,\n        removeTask: removeTask,\n        ChangeFilter: ChangeFilter,\n        addMessage: AddMessage,\n        InputCheck: InputCheck,\n        Filter: nameButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ciZiBL1I0uppptGWHmpK7Z5bWS0=\");\n_c = App;\nexport default App;\n\n//-------------------------------------------------------------------------------------------------------\n//\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\n//\n// function App() {\n//\n//     let [tasks, setTasks] = useState([\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\n//         {id: v1(), title: \"JS\", isDone: true},\n//         {id: v1(), title: \"ReactJS\", isDone: false},\n//         {id: v1(), title: \"Rest API\", isDone: false},\n//         {id: v1(), title: \"GraphQL\", isDone: false},\n//     ]);\n//\n//     function removeTask(id: string) {\n//         let filteredTasks = tasks.filter(t => t.id != id);\n//         setTasks(filteredTasks);\n//     }\n//\n//     function addTask(title: string) {\n//         let task = {id: v1(), title: title, isDone: false};\n//         let newTasks = [task, ...tasks];\n//         setTasks(newTasks);\n//     }\n//\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\n//\n//     let tasksForTodolist = tasks;\n//\n//     if (filter === \"active\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\n//     }\n//     if (filter === \"completed\") {\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\n//     }\n//\n//     function changeFilter(value: FilterValuesType) {\n//         setFilter(value);\n//     }\n//\n//\n//     return (\n//         <div className=\"App\">\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                     <div>Many intresting information</div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}>\n//                 <div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <div>A lot of boring information</div>\n//                     <input placeholder={'A lot of boring information'}/>\n//                     <div>\n//                         <button>Boring Button 1</button>\n//                         <button>Boring Button 2</button>\n//                         <button>Boring Button 3</button>\n//                     </div>\n//                 </div>\n//             </Todolist>\n//\n//             <Todolist title=\"What to learn\"\n//                       tasks={tasksForTodolist}\n//                       removeTask={removeTask}\n//                       changeFilter={changeFilter}\n//                       addTask={addTask}/>\n//         </div>\n//     );\n// }\n//\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","v1","Todolist","App","tasks","setTasks","id","title","isDone","todolists","setTodolists","filter","removeTask","newTask","el","nameButton","setNameButton","ChangeFilter","Filtered","filteredTask","AddMessage","inputValue","InputCheck","event","map"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["// import {useState} from \"react\";\r\n// import {v1} from \"uuid\";\r\n//\r\n// let [todolist,setTodolist]=useState<TodolistType[]>([\r\n//     {id:v1(),title:'What to learn',filter:'all'},\r\n//     {id:v1(),title: 'What to buy',filter:'all'},\r\n// ])\r\n//\r\n// let todolistId1 = v1();\r\n// let todolistId2 = v1();\r\n//\r\n\r\n//\r\n// let [tasks, setTasks] = useState({\r\n//     [todolistId1]: [\r\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n//         {id: v1(), title: \"JS\", isDone: true},\r\n//         {id: v1(), title: \"ReactJS\", isDone: false},\r\n//         {id: v1(), title: \"Rest API\", isDone: false},\r\n//         {id: v1(), title: \"GraphQL\", isDone: false},\r\n//     ],\r\n//     [todolistId2]: [\r\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n//         {id: v1(), title: \"JS\", isDone: true},\r\n//         {id: v1(), title: \"ReactJS\", isDone: false},\r\n//         {id: v1(), title: \"Rest API\", isDone: false},\r\n//         {id: v1(), title: \"GraphQL\", isDone: false},\r\n//     ]\r\n// });\r\n\r\n\r\n\r\nimport React,{useState} from 'react';\r\nimport './App.css';\r\nimport {v1} from 'uuid'\r\nimport {Todolist} from \"./Todolist\";\r\n\r\n\r\ntype TodolistType= {\r\n    id:string;\r\n    title:string;\r\n    filter:ButtonType\r\n}\r\nexport type ButtonType ='All'|'Active'|'Completed'\r\n\r\nfunction App() {\r\n    let [tasks, setTasks] = useState([\r\n        {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n        {id: v1(), title: \"JS\", isDone: true},\r\n        {id: v1(), title: \"ReactJS\", isDone: false},\r\n        {id: v1(), title: \"Rest API\", isDone: false},\r\n        {id: v1(), title: \"GraphQL\", isDone: false},\r\n    ]);\r\n\r\nlet [todolists, setTodolists] = useState<TodolistType[]>([\r\n    {id: v1(), title: \"What to learn\", filter: \"All\"},\r\n    {id: v1(), title: \"What to buy\", filter: \"All\"}\r\n])\r\n\r\n    const removeTask = (id:string)=> {\r\n        let newTask=tasks.filter((el)=>el.id!=id)\r\n        setTasks(newTask)\r\n    }\r\n\r\n    let [nameButton,setNameButton]=useState<ButtonType>('All')\r\n\r\n    const ChangeFilter = (nameButton:ButtonType)=> {\r\n        setNameButton(nameButton)\r\n    }\r\n\r\n    const Filtered = ()=> {\r\n        let filteredTask=tasks\r\n        if(nameButton==='Active'){filteredTask=tasks.filter((el)=>el.isDone===false)}\r\n        if(nameButton==='Completed'){filteredTask=tasks.filter((el)=>el.isDone===true)}\r\n        return filteredTask\r\n    }\r\n\r\n    const AddMessage = (inputValue:string)=> {\r\n        let newTask={id: v1(), title: inputValue, isDone: true}\r\n        setTasks([newTask,...tasks])\r\n    }\r\n    const InputCheck = (event:boolean,id:string)=> {\r\n        setTasks(tasks.map((el)=>el.id=== id ? {...el,isDone:event}:el))\r\n\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            {todolists.map((el)=>{\r\n                return(\r\n                    <Todolist task={Filtered()} name={el.title} removeTask={removeTask}\r\n                              ChangeFilter={ChangeFilter}\r\n                              addMessage={AddMessage}\r\n                              InputCheck={InputCheck}\r\n                              Filter={nameButton}/>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//-------------------------------------------------------------------------------------------------------\r\n//\r\n// export type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n//\r\n// function App() {\r\n//\r\n//     let [tasks, setTasks] = useState([\r\n//         {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n//         {id: v1(), title: \"JS\", isDone: true},\r\n//         {id: v1(), title: \"ReactJS\", isDone: false},\r\n//         {id: v1(), title: \"Rest API\", isDone: false},\r\n//         {id: v1(), title: \"GraphQL\", isDone: false},\r\n//     ]);\r\n//\r\n//     function removeTask(id: string) {\r\n//         let filteredTasks = tasks.filter(t => t.id != id);\r\n//         setTasks(filteredTasks);\r\n//     }\r\n//\r\n//     function addTask(title: string) {\r\n//         let task = {id: v1(), title: title, isDone: false};\r\n//         let newTasks = [task, ...tasks];\r\n//         setTasks(newTasks);\r\n//     }\r\n//\r\n//     let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n//\r\n//     let tasksForTodolist = tasks;\r\n//\r\n//     if (filter === \"active\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n//     }\r\n//     if (filter === \"completed\") {\r\n//         tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n//     }\r\n//\r\n//     function changeFilter(value: FilterValuesType) {\r\n//         setFilter(value);\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                     <div>Many intresting information</div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}>\r\n//                 <div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <div>A lot of boring information</div>\r\n//                     <input placeholder={'A lot of boring information'}/>\r\n//                     <div>\r\n//                         <button>Boring Button 1</button>\r\n//                         <button>Boring Button 2</button>\r\n//                         <button>Boring Button 3</button>\r\n//                     </div>\r\n//                 </div>\r\n//             </Todolist>\r\n//\r\n//             <Todolist title=\"What to learn\"\r\n//                       tasks={tasksForTodolist}\r\n//                       removeTask={removeTask}\r\n//                       changeFilter={changeFilter}\r\n//                       addTask={addTask}/>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}