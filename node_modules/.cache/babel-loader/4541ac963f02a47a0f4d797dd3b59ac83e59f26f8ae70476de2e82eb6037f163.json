{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  _s();\n  const onclickHandlerFilter = nameButton => {\n    props.filtered(nameButton);\n  };\n  const DeleteTask = id => {\n    props.removeTask(id);\n  };\n  let [inputValue, setInputValue] = useState('');\n  const onInputChange = event => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [el.title, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: 'checkbox',\n            checked: el.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => DeleteTask(el.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, el.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onclickHandlerFilter('all'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onclickHandlerFilter('active'),\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onclickHandlerFilter('completed'),\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"fNxyqMdOrVgwzU9I4cKuq4oRPjc=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","onclickHandlerFilter","nameButton","filtered","DeleteTask","id","removeTask","inputValue","setInputValue","onInputChange","event","title","task","map","el","isDone"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport {FilterValuesType} from './App';\n\ntype TodolistType = {\n   title:string\n    task:ArrayTypeTask[]\n    filtered:(nameButton:FilterValuesType)=>void\n    removeTask:(id:string)=>void\n}\n\ntype ArrayTypeTask = {\n    id:string;\n    title:string;\n    isDone:boolean;\n}\n\n\nexport const Todolist = (props:TodolistType) => {\n\n\n\n    const onclickHandlerFilter = (nameButton:FilterValuesType)=> {\n        props.filtered(nameButton)\n    }\n\n    const DeleteTask = (id:string)=> {\n        props.removeTask(id)\n    }\n\n    let [inputValue,setInputValue]=useState('')\n\n    const onInputChange = (event:ChangeEvent<HTMLInputElement>)=> {\n\n    }\n    return (\n        <div>\n      <h3>{props.title}</h3>\n            <input onChange={onInputChange}/>\n            <button>Add</button>\n            <ul>\n                {props.task.map((el)=>{\n                    return(\n                        <li key={el.id}>\n                            {el.title}\n                            <input   type={'checkbox'} checked={el.isDone}/>\n                            <button onClick={()=>DeleteTask(el.id)}>X</button>\n                        </li>\n                    )\n                })}\n            </ul>\n            <button onClick={()=>onclickHandlerFilter('all')}>All</button>\n            <button onClick={()=>onclickHandlerFilter('active')}>Active</button>\n            <button onClick={()=>onclickHandlerFilter('completed')}>Completed</button>\n        </div>\n    );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,QAAQ,QAAO,OAAO;AAAC;AAiBnD,OAAO,MAAMC,QAAQ,GAAIC,KAAkB,IAAK;EAAA;EAI5C,MAAMC,oBAAoB,GAAIC,UAA2B,IAAI;IACzDF,KAAK,CAACG,QAAQ,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,MAAME,UAAU,GAAIC,EAAS,IAAI;IAC7BL,KAAK,CAACM,UAAU,CAACD,EAAE,CAAC;EACxB,CAAC;EAED,IAAI,CAACE,UAAU,EAACC,aAAa,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMW,aAAa,GAAIC,KAAmC,IAAI,CAE9D,CAAC;EACD,oBACI;IAAA,wBACF;MAAA,UAAKV,KAAK,CAACW;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAO,QAAQ,EAAEF;IAAc;MAAA;MAAA;MAAA;IAAA,QAAE,eACjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MAAA,UACKT,KAAK,CAACY,IAAI,CAACC,GAAG,CAAEC,EAAE,IAAG;QAClB,oBACI;UAAA,WACKA,EAAE,CAACH,KAAK,eACT;YAAS,IAAI,EAAE,UAAW;YAAC,OAAO,EAAEG,EAAE,CAACC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAE,eAChD;YAAQ,OAAO,EAAE,MAAIX,UAAU,CAACU,EAAE,CAACT,EAAE,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW;QAAA,GAH7CS,EAAE,CAACT,EAAE;UAAA;UAAA;UAAA;QAAA,QAIT;MAEb,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACL;MAAQ,OAAO,EAAE,MAAIJ,oBAAoB,CAAC,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,eAC9D;MAAQ,OAAO,EAAE,MAAIA,oBAAoB,CAAC,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eACpE;MAAQ,OAAO,EAAE,MAAIA,oBAAoB,CAAC,WAAW,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QACxE;AAEd,CAAC;AAAC,GAtCWF,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}