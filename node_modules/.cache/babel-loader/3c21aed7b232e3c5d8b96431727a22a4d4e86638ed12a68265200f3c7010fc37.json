{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { v1 } from 'uuid';\nimport { Todolist } from \"./Todolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [todolists, setTodolists] = useState([{\n    id: v1(),\n    title: 'What to learn',\n    filter: 'All'\n  }, {\n    id: v1(),\n    title: 'What to buy',\n    filter: 'All'\n  }]);\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  const removeTask = taskId => {\n    setTasks(tasks.filter(el => el.id !== taskId));\n  };\n  const AddMessage = value => {\n    let NewTask = {\n      id: v1(),\n      title: value,\n      isDone: true\n    };\n    setTasks([NewTask, ...tasks]);\n  };\n  const [filter, SetFilter] = useState('All');\n  let filtered = tasks;\n  if (filter === 'Active') {\n    filtered = tasks.filter(el => el.isDone === false);\n  }\n  if (filter === 'Completed') {\n    filtered = tasks.filter(el => el.isDone === true);\n  }\n  const filteredTask = nameButton => {\n    SetFilter(nameButton);\n  };\n  const changeStatus = (id, e) => {\n    setTasks(tasks.map(el => el.id === id ? {\n      ...el,\n      isDone: e\n    } : el));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolists.map(el => {\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        title: el.title,\n        task: filtered,\n        removeTask: removeTask,\n        filteredTask: filteredTask,\n        AddMessage: AddMessage,\n        changeStatus: changeStatus,\n        Filter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"OowJ6NeWACXI2c5dL7dT7K6EDLU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","v1","Todolist","App","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","removeTask","taskId","el","AddMessage","value","NewTask","SetFilter","filtered","filteredTask","nameButton","changeStatus","e","map"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {v1} from 'uuid'\nimport {Todolist} from \"./Todolist\";\n\n\nexport type FilterValueType = 'All'|'Active'|'Completed'\n\ntype TodolistsType = {\n    id:string;\n    title:string;\n    filter:FilterValueType\n}\n\nfunction App() {\n\n let [todolists, setTodolists] = useState<Array<TodolistsType>>(\n        [\n            {id: v1(), title: 'What to learn', filter: 'All'},\n            {id: v1(), title: 'What to buy', filter: 'All'},\n        ]\n    )\n\n\n    let [tasks, setTasks] = useState([\n        {id: v1(), title: \"HTML&CSS\", isDone: true},\n        {id: v1(), title: \"JS\", isDone: true},\n        {id: v1(), title: \"ReactJS\", isDone: false},\n        {id: v1(), title: \"Rest API\", isDone: false},\n        {id: v1(), title: \"GraphQL\", isDone: false},\n    ]);\n\n    const removeTask = (taskId:string)=> {\n        setTasks(tasks.filter((el)=>el.id!==taskId))\n    }\n\n    const AddMessage = (value:string)=> {\n        let NewTask = {id: v1(), title: value, isDone: true}\n\n        setTasks([NewTask,...tasks])\n    }\n\n    const [filter,SetFilter]=useState<FilterValueType>('All')\n\n    let filtered =tasks\n    if (filter==='Active'){filtered=tasks.filter((el)=>el.isDone===false)}\n    if (filter==='Completed'){filtered=tasks.filter((el)=>el.isDone===true)}\n\n\n    const filteredTask =(nameButton:FilterValueType)=> {\n  SetFilter(nameButton)\n    }\n\n    const changeStatus = (id:string,e:boolean)=> {\n        setTasks(tasks.map((el)=>el.id===id ? {...el,isDone: e}: el))\n    }\n    return (\n        <div className=\"App\">\n            {todolists.map((el)=>{\n                return (\n                    <Todolist  title ={el.title}\n                               task={filtered}\n                               removeTask={removeTask}\n                               filteredTask={filteredTask}\n                               AddMessage={AddMessage}\n                               changeStatus={changeStatus}\n                               Filter={filter}/>\n                )\n            })}\n\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}