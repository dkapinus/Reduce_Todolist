{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from \"./Button\";\nimport s from './Todolist.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  _s();\n  let [inputValue, setInputValue] = useState('');\n  let [error, setError] = useState(null);\n  const AddMessage = () => {\n    if (inputValue.trim() !== '') {\n      props.addMessage(props.todolistId, inputValue.trim());\n    } else {\n      setError('Title reqired');\n    }\n    setInputValue('');\n  };\n  const ChangeInput = event => {\n    setInputValue(event.currentTarget.value);\n    setError(null);\n  };\n  const KeyDown = event => {\n    if (event.key === 'Enter') {\n      AddMessage();\n    }\n  };\n  const InputCheck = (todolistId, event, id) => {\n    props.InputCheck(todolistId, event, id);\n  };\n  const RemoveTodolist = todolistId => {\n    props.removeTodolist(todolistId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [props.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => RemoveTodolist(props.todolistId),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: error ? s.error : '',\n      onChange: ChangeInput,\n      value: inputValue,\n      onKeyDown: KeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: 'Add',\n      started: AddMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.errorMessage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [props.task.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: el.isDone ? s.isDone : '',\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: 'checkbox',\n              onChange: event => InputCheck(props.todolistId, event.currentTarget.checked, el.id),\n              checked: el.isDone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: el.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              name: 'x',\n              started: () => props.removeTask(props.todolistId, el.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        Filter: props.Filter,\n        name: 'All',\n        started: () => props.ChangeFilter(props.todolistId, 'All')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        Filter: props.Filter,\n        name: 'Active',\n        started: () => props.ChangeFilter(props.todolistId, 'Active')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        Filter: props.Filter,\n        name: 'Completed',\n        started: () => props.ChangeFilter(props.todolistId, 'Completed')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"w0DUQDk/y+gPPQ4DbNvOQl5g6As=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Button","s","Todolist","props","inputValue","setInputValue","error","setError","AddMessage","trim","addMessage","todolistId","ChangeInput","event","currentTarget","value","KeyDown","key","InputCheck","id","RemoveTodolist","removeTodolist","name","errorMessage","task","map","el","isDone","checked","title","removeTask","Filter","ChangeFilter"],"sources":["/Users/viktoriakapinus/Documents/ToDoList/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent,KeyboardEvent, useState} from 'react';\nimport {ButtonType} from \"./App\";\nimport {Button} from \"./Button\";\nimport s from './Todolist.module.css';\n\n\ntype TodolistType = {\n    todolistId:string;\n    task:Array<TaskType>;\n    name:string;\n    removeTask:(todolistId:string,id:string)=>void;\n    ChangeFilter:(todolistId:string,nameButton:ButtonType)=>void;\n    addMessage:(todolistId:string,inputValue:string)=>void\n    InputCheck:(todolistId:string,event:boolean,id:string)=>void\n    Filter:ButtonType;\n    removeTodolist:(todolistId:string)=>void\n}\n\nexport type TaskType = {\n    id:string;\n    title:string;\n    isDone:boolean;\n}\n\nexport const Todolist = (props:TodolistType) => {\n\n\n\n\n    let [inputValue,setInputValue]=useState('')\n    let [error,setError]=useState<string|null>(null)\n\n\n    const AddMessage = ()=> {\n        if(inputValue.trim()!=='')\n        {props.addMessage(props.todolistId,inputValue.trim())}\n        else {setError('Title reqired')}\n\n        setInputValue('')\n    }\n\n    const ChangeInput = (event:ChangeEvent<HTMLInputElement>)=> {\n        setInputValue(event.currentTarget.value)\n        setError(null)\n    }\n    const KeyDown =(event:KeyboardEvent<HTMLInputElement>)=> {\n\n        if(event.key==='Enter'){\n            AddMessage()\n        }\n    }\n\n\n\n\n    const InputCheck =(todolistId:string,event:boolean,id:string,)=> {\n\n        props.InputCheck(todolistId,event,id)\n\n    }\n\n    const RemoveTodolist = (todolistId:string)=> {\n        props.removeTodolist(todolistId)\n    }\n\n    return (\n        <div>\n            <h3>{props.name}\n                <button onClick={()=>RemoveTodolist(props.todolistId)}>X</button>\n            </h3>\n            <input className={error ? s.error:''} onChange={ChangeInput} value={inputValue} onKeyDown={KeyDown}/>\n            <Button name={'Add'} started={AddMessage}/>\n            <span>\n               {error && <div className={s.errorMessage}>{error}</div>}\n           </span>\n            <div>\n                {props.task.map((el)=>{\n\n                    return (\n                        <div  key={el.id}>\n                            <li  className={el.isDone ? s.isDone:''}>\n                                <input type={'checkbox'} onChange={(event)=>InputCheck(props.todolistId,event.currentTarget.checked,el.id,)} checked={el.isDone}/>\n                                <span>{el.title}</span>\n\n                                <Button name={'x'} started={()=>props.removeTask(props.todolistId,el.id)}/>\n                            </li>\n\n                        </div>\n                    )\n                })}\n                <Button Filter={props.Filter} name={'All'} started={()=>props.ChangeFilter(props.todolistId,'All')}/>\n                <Button Filter={props.Filter} name={'Active'} started={()=>props.ChangeFilter(props.todolistId,'Active')}/>\n                <Button Filter={props.Filter} name={'Completed'} started={()=>props.ChangeFilter(props.todolistId,'Completed')}/>\n\n            </div>\n        </div>\n    );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}